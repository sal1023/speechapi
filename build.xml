<?xml version="1.0" encoding="UTF-8"?>

<project name="speechcloud" basedir="." default="help">

	<property environment="env" />

	<property file="${basedir}/user.properties" />
	<property file="${user.home}/build.properties" />
	<property file="${basedir}/build.properties" />

	<property name="jaxws.home" value="${env.JAXWS_HOME}" />
	<property name="sphinx.home" value="C:\thirdparty\sphinx4\" />
	
	<property name="catalina.home" value="${env.CATALINA_HOME}" />
	<property name="catalina.host" value="localhost" />
	<property name="catalina.port" value="8090" />

	<property name="build.home" value="${basedir}/target/build" />
	<property name="build.classes.home" value="${build.home}/classes" />
	<property name="build.client.classes.home" value="${build.home}/client/classes" />
	<property name="build.cli.classes.home" value="${build.home}/cli/classes" />
	<property name="build.generated.home" value="${build.home}/gen" />
	<property name="build.war.home" value="${build.home}/war" />
	<property name="name" value="${ant.project.name}" />
	<property name="war.filename" value="${name}.war" />

	<property name="lib.dir" value="${basedir}/lib" />
	<property name="freetts.jar" value="${lib.dir}/freetts-1.2.1.jar" />
	<property name="log4j.jar" value="${lib.dir}/log4j-1.2.14.jar" />
	<property name="spring.jar" value="${lib.dir}/spring-2.5.5.jar" />
	<property name="commons-pool.jar" value="${lib.dir}/commons-pool-1.3.jar" />
	<property name="commons-lang.jar" value="${lib.dir}/commons-lang-2.3.jar" />
	<property name="commons-cli.jar" value="${lib.dir}/commons-cli-1.0.jar" />
	<property name="httpmime.jar" value="${lib.dir}/httpmime-4.0-beta2.jar" />
	<property name="httpclient.jar" value="${lib.dir}/httpclient-4.0-beta2.jar" />
	<property name="httpcore.jar" value="${lib.dir}/httpcore-4.0.jar" />
	

	<property name="sphinx4.jar" value="${lib.dir}/sphinx4.jar" />
	<property name="WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz.jar"  value="${lib.dir}/WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz.jar" />
	<property name="WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar"  value="${lib.dir}/WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar" />
		
	
    <property name="servlet-api.jar" value="${catalina.home}/lib/servlet-api.jar" />
	<property name="commons-logging.jar" value="${lib.dir}/commons-logging.jar" />
	<property name="commons-fileupload.jar" value="${lib.dir}/commons-fileupload-1.2.1.jar" />
	<property name="commons-io.jar" value="${lib.dir}/commons-io-1.4.jar" />
	<property name="jstl.jar" value="${catalina.home}/webapps/examples/WEB-INF/lib/jstl.jar" />
	<property name="standard.jar" value="${catalina.home}/webapps/examples/WEB-INF/lib/standard.jar" />
	
	

	<property name="verbose" value="true" />
	

	<property name="appserver.home" value="C:/thirdparty/apache-tomcat-6.0.14" />
	<property name="appserver.lib" value="${appserver.home}/lib" />
	<property name="deploy.path" value="${appserver.home}/webapps" />
	<property name="tomcat.manager.url" value="http://localhost:8090/manager" />
	<property name="tomcat.manager.username" value="tomcat" />
	<property name="tomcat.manager.password" value="s3cret" />



	<property name="pkg.server" value="com.spokentech.speechdown.server" />
	<property name="server.wsdl.location" value="${basedir}/etc/"/>
	<property name="server.binding.files" value="customfile-server.xml"/>

	<path id="jaxws.classpath">
		<pathelement location="${java.home}/../lib/tools.jar" />
		<pathelement	location="${commons-pool.jar}" />
		<pathelement	location="${commons-lang.jar}" />
		<pathelement	location="${commons-cli.jar}" />
		<pathelement	location="${log4j.jar}" />
		<pathelement	location="${spring.jar}" />
		<pathelement	location="${freetts.jar}" />
		<pathelement	location="${sphinx4.jar}" />
		
		<pathelement	location="${servlet-api.jar}" />
		<pathelement	location="${commons-fileupload.jar}" />
		<pathelement	location="${commons-io.jar}" />
		<pathelement	location="${httpmime.jar}" />
		<pathelement	location="${httpclient.jar}" />
		<pathelement	location="${httpcore.jar}" />
		<!--pathelement	location="${jstl.jar}" /-->
	    <!--pathelement	location="${standard.jar}" /-->
		
		
		<pathelement	location="${WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz.jar}" />
		<pathelement	location="${WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz.jar}" />
		<fileset dir="${jaxws.home}/lib">
			<include name="*.jar" />
			<exclude name="j2ee.jar" />
		</fileset>
	</path>

	<taskdef name="apt" classname="com.sun.tools.ws.ant.Apt">
		<classpath refid="jaxws.classpath" />
	</taskdef>
	


	<taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
		<classpath refid="jaxws.classpath" />
	</taskdef>

	<target name="setup">
		<mkdir dir="${build.home}" />
		<mkdir dir="${build.classes.home}" />
		<mkdir dir="${build.client.classes.home}" />
		<mkdir dir="${build.cli.classes.home}" />
		<mkdir dir="${build.generated.home}" />
		<mkdir dir="${build.war.home}/WEB-INF" />
	</target>

	<target name="build-server-java" depends="setup">
		<apt
			fork="true"
			debug="true"
			verbose="${verbose}"
			destdir="${build.classes.home}"
			sourcedestdir="${build.classes.home}"
			sourcepath="${basedir}/src/java">
			<classpath>
				<path refid="jaxws.classpath" />
				<pathelement location="${basedir}/src/java" />
				<pathelement location="${build.classes.home}" />
			</classpath>
			<option key="r" value="${build.home}" />
			<source dir="${basedir}/src/java">
			<include name="**/server/ws/SpeechServiceImpl.java" />
			<!--include name="**/common/**/*.java" /-->
			</source>
		</apt>
	</target>

	<target name="clean">
		<delete dir="${build.home}" includeEmptyDirs="true" />
	</target>

	<target name="create-war" depends="compile-server">
	
		<filter token="applicationContext.recognizerService.baseGrammarDir" value="c:/temp" />
		<filter token="applicationContext.recognizerService.sphinxConfigFile" value="file:///${catalina.home}/webapps/${ant.project.name}/WEB-INF/sphinx-config.xml" />
		<filter token="applicationContext.synthesizerService.prefix" value="http://${catalina.host}:${catalina.port}/${ant.project.name}/prompts/" />
		<filter token="applicationContext.synthesizerService.promptDir" value="${catalina.home}/webapps/${ant.project.name}/prompts" />
		<copy todir="${build.war.home}/WEB-INF" overwrite="true" filtering="true">
			<fileset dir="${basedir}/etc" includes="*.xml" />
		</copy>
		<war warfile="${build.war.home}/${war.filename}" webxml="${basedir}/src/webapp/WEB-INF/web.xml">
			<fileset dir="${basedir}/src/webapp">
				<exclude name="**/WEB-INF/web.xml" />
			</fileset>
			<webinf dir="${build.war.home}/WEB-INF" includes="*.xml" />
			<zipfileset dir="etc/prompts" prefix="prompts" />
			<zipfileset dir="etc/grammar" prefix="grammar" />
			<zipfileset dir="${basedir}/etc" prefix="WEB-INF/wsdl" includes="*.wsdl, *.xsd" />
			<zipfileset dir="${basedir}/etc" prefix="WEB-INF/classes" includes="log4j.xml" />
			<classes dir="${build.classes.home}" />
			<lib dir="${basedir}/lib" />
			<lib file="${jstl.jar}" />
			<lib file="${standard.jar}" />
		</war>
	</target>

	<target name="generate-client" depends="setup">
		<wsimport
				debug="true"
				verbose="${verbose}"
				keep="true"
				destdir="${build.client.classes.home}"
	            sourcedestdir="${build.generated.home}"
				package="com.spokentech.speechdown.client"
				wsdl="http://${catalina.host}:${catalina.port}/${ant.project.name}/speechlink?wsdl">
		</wsimport>
	    <wsimport
				debug="true"
				verbose="${verbose}"
				keep="true"
     	        sourcedestdir="${build.generated.home}"
				destdir="${build.client.classes.home}"
				package="com.spokentech.speechdown.client"
				wsdl="http://${catalina.host}:${catalina.port}/${ant.project.name}/speechattach?wsdl">
		</wsimport>
	</target>

	<target name="client" depends="generate-client">
		<javac
				fork="true"
				srcdir="${basedir}/src/java"
				destdir="${build.client.classes.home}"
				includes="**/client/**,**/common/**">
			<classpath refid="jaxws.classpath" />
		</javac>
	</target>

	<target name="run">
		<java fork="true" classname="com.spokentech.speechdown.client.SpeechServiceClient">
			<classpath>
				<path refid="jaxws.classpath" />
				<pathelement location="${build.client.classes.home}" />
				<pathelement location="${basedir}/etc" />
			</classpath>
		</java>
	</target>
	
	
   <target name="jar-client" depends="client">
        <jar destfile="${bin_dir}/SpeechCloudCLI.jar"
             manifest="${basedir}/etc/speechCloudCLI.Manifest"
             basedir="${build.client.classes.home}"
             includes="edu/cmu/sphinx/demo/hellodigits/**"
             filesonly="true"
             compress="true"/>
    </target>
    
    
    <!-- ============================================================== -->
	<!-- CLI tasks - for building the command line interface clients.   -->
	<!-- ============================================================== -->
   <target name="generate-cli" depends="setup">
		<wsimport
				debug="true"
				verbose="${verbose}"
				keep="true"
				destdir="${build.cli.classes.home}"
				sourcedestdir="${build.generated.home}"
				package="com.spokentech.speechdown.client"
				wsdl="http://${catalina.host}:${catalina.port}/${ant.project.name}/speechlink?wsdl">
		</wsimport>
	    <wsimport
				debug="true"
				verbose="${verbose}"
				keep="true"
				destdir="${build.cli.classes.home}"
				sourcedestdir="${build.generated.home}"
				package="com.spokentech.speechdown.client"
				wsdl="http://${catalina.host}:${catalina.port}/${ant.project.name}/speechattach?wsdl">
		</wsimport>
	</target>

	<target name="cli" depends="generate-cli">
		<javac
				fork="true"
				srcdir="${basedir}/src/java"
				destdir="${build.cli.classes.home}"
				includes="**/cli/**,**/common/**">
			<classpath refid="jaxws.classpath" />
		</javac>
	</target>
	
	
   <target name="jar-cli" depends="cli">
        <jar destfile="${basedir}/lib/speechcloud-cli.jar"
             basedir="${build.cli.classes.home}"
             filesonly="true"
             compress="true"/>
    </target>
    
    

	<target name="help">
		<echo message="server:				Builds and deploys the service endpoint WAR" />
		<echo message="client:				Builds the client" />
		<echo message="run:					Runs the client" />
	</target>

	<target name="deploy">
		<copy file="${build.war.home}/${war.filename}" todir="${catalina.home}/webapps" />
	</target>

	<target name="server" depends="clean, deploy" />


    <target name="import-wsdl-server" depends="setup"> 
      <antcall target="do-wsdl2java">
        <param name="pkg" value="${pkg.server}"/>
        <param name="wsdl.location" value="${server.wsdl.location}"/>
        <param name="wsdl.file" value="${server.wsdl.location}/SpeechAttach.wsdl"/>
        <param name="customization.binding.files" value="${server.binding.files}"/>
      </antcall>
      <antcall target="do-wsdl2java">
        <param name="pkg" value="${pkg.server}"/>
        <param name="wsdl.location" value="${server.wsdl.location}"/>
        <param name="wsdl.file" value="${server.wsdl.location}/SpeechLink.wsdl"/>
        <param name="customization.binding.files" value="${server.binding.files}"/>
      </antcall>
    </target>
    
    <target name="compile-server" depends="import-wsdl-server">
      <echo message="compile-server" />
      <javac srcdir="${basedir}/src/java"
        destdir="${build.classes.home}"
        includes="**/server/**, **/common/**"
        debug="on"
        failonerror="true">
        <classpath>
        		<path refid="jaxws.classpath" />
				<pathelement location="${build.classes.home}" />
		</classpath>
	   </javac>
    </target>
    
    
    <target name="import-wsdl-client">
      <antcall target="do-wsdl2java">
        <param name="pkg" value="${pkg.client}"/>
        <param name="wsdl.location" value="${client.wsdl.location}"/>
        <param name="sourcedestdir" value="${build.generated.home}"/>
<!--        <param name="wsdl.file" value="${client.wsdl.location}"/> -->
        <param name="customization.binding.files" value="${client.binding.files}"/>
      </antcall>
    </target>
    
    
    <target name="compile-client">
      <echo message="compile-client" />
      <javac srcdir="src/java"
        destdir="${build.classes.home}"
        classpathref="jaxws.classpath"
        includes="client/**, common/**"
        debug="on"
        failonerror="true"/>
    </target>


    <!-- generates portable artifacts WSDL-to-Java (wsimport) -->
    <!-- uses binding customizations to specify where artifacts go -->
    <target name="do-wsdl2java">
           <echo message="Invoking WsImport task (WSDL-to-Java mapping)" />
           <wsimport 
              fork="true"
              package="${pkg}"
              verbose="${verbose}"
              debug="${wsimport.debug}"
              destdir="${build.classes.home}"
              sourcedestdir="${build.generated.home}"
              keep="true"
              wsdllocation="${wsdl.location}"
              wsdl="${wsdl.file}">
              <binding dir="." includes="${customization.binding.files}"/>
           </wsimport>
    </target> 

	<!-- ============================================================== -->
	<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
	<!-- ============================================================== -->
	<path id="catalina-ant-classpath">
		<!-- We need the Catalina jars for Tomcat -->
		<!-- * for other app servers - check the docs -->
		<fileset dir="${appserver.lib}">
			<include name="catalina-ant.jar" />
		</fileset>
	</path>
	<taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
		<classpath refid="catalina-ant-classpath" />
	</taskdef>
	<target name="install" description="Install application in Tomcat">
		<install url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" war="${name}" />
	</target>
	<target name="reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>
	<target name="start" description="Start Tomcat application">
		<start url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>
	<target name="stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>
	<target name="list" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" />
	</target>
	<!-- End Tomcat tasks -->

</project>
