<?xml version="1.0"?>

<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:ws="http://jax-ws.dev.java.net/spring/core"
  xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://jax-ws.dev.java.net/spring/core
    http://jax-ws.dev.java.net/spring/core.xsd
    http://jax-ws.dev.java.net/spring/servlet
    http://jax-ws.dev.java.net/spring/servlet.xsd">


	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations">
       		<value>classpath:speech.properties</value>
    	</property>
	</bean>


	<bean id="recognizerTest" 
	      class="com.spokentech.speechdown.server.SphinxRecEngineTest"
		  init-method="startup" destroy-method="shutdown" scope ="singleton">
	</bean>


	<bean id="sphinxRecEngineFactory" 
		class="com.spokentech.speechdown.server.util.pool.SphinxRecEngineFactory"
    		scope="singleton">
		  
		  <property name="showTokenCount">
			<value>${speech.search.showTokenCount}</value>
		  </property>
		  <property name="relativeWordBeamWidth">
			<value>${speech.relativeBeamWidth2}</value>
		  </property>
		  <property name="growSkipInterval">
			<value>${speech.search.growSkipInterval}</value>
		  </property>
		  <property name="checkStateOrder">
			<value>${speech.search.checkStateOrder}</value>
		  </property>
		  <property name="buildWordLattice">
			<value>${speech.search.buildWordLattice}</value>
		  </property>
		  <property name="maxLatticeEdges">
			<value>${speech.search.maxLatticeEdges}</value>
		  </property>
		  <property name="acousticLookaheadFrames">
			<value>${speech.search.acousticLookahead}</value>
		  </property>
		  <property name="keepAllTokens">
			<value>${speech.search.keepAllTokens}</value>
		  </property>

		  <property name="fireNonFinalResults">
			<value>${speech.decoder.fireNonFinalResults}</value>
		  </property>
		  <property name="autoAllocate">
			<value>${speech.decoder.autoAllocate}</value>
		  </property>
		  <property name="featureBlockSize">
			<value>${speech.decoder.featureBlockSize}</value>
		</property>	  
		<property name="recordingFilePath">
			<value>${speech.recordingDir}</value>
		</property>	  
		<property name="recordingEnabled">
			<value>${speech.recordingEnabled}</value>
		</property>	  

		
		
		
	</bean>

	
	<bean id="grammarManager" 
	      class="com.spokentech.speechdown.server.recog.GrammarManager"
		  init-method="startup" destroy-method="shutdown">
		  <property name="grammarDir">
				<value>grammars</value>
		  </property>
		  <property name="baseGrammarDir">
				<value>${speech.baseGrammarDir}</value>
		  </property>
	</bean>
	
    <bean name="s4RecEngineLm" 
                class="com.spokentech.speechdown.server.recog.SphinxRecEngine" scope="prototype"
                		  init-method="startup" destroy-method="shutdown">             
        <property name="recognizer"><ref bean="recognizerLm"/></property>
        <property name="jsgf"> <ref bean="jsgf"/></property>
        <property name="grammarManager"> <ref bean="grammarManager"/></property>
        <property name="loader"> <ref bean="loader"/></property>
        <property name="scorer"> <ref bean="scorer"/></property>   
        <property name="confidenceScorer"> <ref bean="confidenceScorer"/></property>
        <property name="logMath"> <ref bean="logMath"/></property>
        <property name="recordingDir"> <value>${speech.recordingDir}</value></property>
        <property name="recordingEnabled"> <value>${speech.recordingEnabled}</value></property>   
     </bean>
     
     <bean name="s4RecEngineGrammar" 
                class="com.spokentech.speechdown.server.recog.SphinxRecEngine" scope="prototype"
                		  init-method="startup" destroy-method="shutdown">             
        <property name="recognizer"><ref bean="recognizerGrammar"/></property>
        <property name="jsgf"> <ref bean="jsgf"/></property>
        <property name="grammarManager"> <ref bean="grammarManager"/></property>
        <property name="loader"> <ref bean="loader"/></property>
        <property name="scorer"> <ref bean="scorer"/></property>   
        <property name="confidenceScorer"> <ref bean="confidenceScorer"/></property>
        <property name="logMath"> <ref bean="logMath"/></property>
        <property name="recordingDir"> <value>${speech.recordingDir}</value></property>
        <property name="recordingEnabled"> <value>${speech.recordingEnabled}</value></property>   
     </bean>


    <!-- ******************************************************** -->
    <!-- Sphinx4 components			                              -->
    <!--   Using constructor injection,  they have constructor    -->
    <!-- ******************************************************** -->  
  
    <!-- ******************************************************** -->
    <!-- The language model linguist  configuration               -->
    <!-- ******************************************************** -->
    

    <bean name="lexTreeLinguist" 
                class="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist" scope ="prototype"> 
        <constructor-arg index="0"  ref="acousticModel"/>
        <constructor-arg index="1"  ref="logMath"/>
        <constructor-arg index="2"  ref="unitManager"/>     
        <constructor-arg index="3"  ref="trigramModel"/>        
        <constructor-arg index="4"  ref="dictionary"/>
		<constructor-arg index="5"  type="boolean" value="${speech.linguist.fullWordHistories}"/>
        <constructor-arg index="6"  type="boolean" value="${speech.linguist.wantUnigramSmear}"/>
        <constructor-arg index="7"  type="double"  value="${speech.linguist.lmwordInsertionProbability}"/>
        <constructor-arg index="8"  type="double"  value="${speech.linguist.lmsilenceInsertionProbability}"/>
        <constructor-arg index="9"  type="double" value="${speech.linguist.lmfillerInsertionProbability}"/>
		<constructor-arg index="10" type="double" value="${speech.linguist.lmunitInsertionProbability}"/>
        <constructor-arg index="11" type="float" value="${speech.linguist.lmlanguageWeight}"/>        
        <constructor-arg index="12" type="boolean"  value="${speech.linguist.addFillerWords}"/>
        <constructor-arg index="13" type="boolean" value="${speech.linguist.generateUnitStates}" />
        <constructor-arg index="14" type="float" value="${speech.linguist.smear}"/>
        <constructor-arg index="15" type="int" value="${speech.linguist.cachesize}"/>
    </bean>    

           
    <bean name="trigramModel"
           class="edu.cmu.sphinx.linguist.language.ngram.large.LargeTrigramModel" scope="prototype">
        <constructor-arg index="0"  type="java.lang.String" value="${speech.lm.format}" />
        <!--constructor-arg index="1"  ref="modelUrl"/-->
        <constructor-arg index="1"   type="java.lang.String" value="${speech.lm.languageModelFile}"/>
        <constructor-arg index="2" type="java.lang.String" ><null/></constructor-arg>
        <!--constructor-arg index="2"   type="java.lang.String" value="${speech.lm.queryLogFile}"/-->
        <constructor-arg index="3"   type="int" value="${speech.lm.maxTrigramCacheSize}"/>
        <constructor-arg index="4"  type="int" value="${speech.lm.maxBigramCacheSize}"/>
        <constructor-arg index="5"  type="boolean" value="${speech.lm.clearCachesAfterUtterance}"/>
        <constructor-arg index="6"  type="int" value="${speech.lm.maxDepth}"/>
        <constructor-arg index="7"  ref="logMath" />
        <constructor-arg index="8"  ref="dictionary" />
        <constructor-arg index="9"  type="boolean" value="${speech.lm.applyLanguageWeightAndWip}"/>
        <constructor-arg index="10"  type="float" value="${speech.lm.languageWeight}"/>
        <constructor-arg index="11"  type="double" value="${speech.lm.wordInsertionProbability}"/>
        <constructor-arg index="12"  type="float" value="${speech.lm.unigramWeight}"/>
        <constructor-arg index="13"  type="boolean" value="${speech.lm.fullSmear}" />
    </bean>
    
    <!--bean name="modelUrl" class="java.net.URL" scope="singleton">
                <constructor-arg index="0"  type="java.lang.String" value="${speech.lm.languageModelFile}" />
    </bean-->
    

    <!-- ******************************************************** -->
    <!-- The Dictionary configuration                            -->
    <!-- ******************************************************** -->

    <bean name="dictionary" class="edu.cmu.sphinx.linguist.dictionary.FastDictionary" scope="singleton">
        <constructor-arg type="java.lang.String" index="0" value="${speech.dictionary.dictionaryPath}"/>
        <constructor-arg type="java.lang.String" index="1" value="${speech.dictionary.fillerPath}"/>       
        <constructor-arg index="2">         
	    	<list>
	    	</list>
    	</constructor-arg>
        <constructor-arg type="boolean" index="3" value="${speech.dictionary.addSilEndingPronunciation}"/>
        <constructor-arg type="java.lang.String" index="4" value="${speech.dictionary.wordReplacement}"/>
        <constructor-arg type="boolean" index="5" value="${speech.dictionary.allowMissingWords}"/>
        <constructor-arg type="boolean" index="6" value="${speech.dictionary.createMissingWords}" />
        <constructor-arg  index="7" ref="unitManager"/>
    </bean>
    

    

    <!-- ******************************************************** -->
    <!-- The acoustic model configuration                         -->
    <!-- ******************************************************** -->

    <bean name="acousticModel"  class="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel" scope="singleton">
        <constructor-arg ref="loader" />
        <constructor-arg ref="unitManager" />
        <constructor-arg type="boolean" value="${speech.am.useComposites}" />
    </bean>
    
    <bean name="loader"
           class="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader" scope="singleton">
        <constructor-arg index="0" value="${speech.am.loader.Location}"/>
        <constructor-arg index="1" value="${speech.am.loader.ModelDefinition}"/>
   	    <constructor-arg index="2" value="${speech.am.loader.DataLocation}"/>
   	    <constructor-arg index="3" ref="logMath"/>
   	    <constructor-arg index="4" ref="unitManager" />
   	    <!--constructor-arg index="5" value="${speech.am.loader.isBinary}" /-->
   	    <!--constructor-arg index="6" value="${speech.am.loader.sparseForm}" /-->
   	    <!--constructor-arg index="7" value="${speech.am.loader.vectorLength}" /-->
   	    <constructor-arg index="5" value="${speech.am.loader.distFloor}" />
   	    <constructor-arg index="6" value="${speech.am.loader.mixtureWeightFloor}" />
   	    <constructor-arg index="7" value="${speech.am.loader.varianceFloor}" />
   	    <constructor-arg index="8" value="${speech.am.loader.useCDUnits}" />
    </bean>


    <!-- ******************************************************* -->
    <!--  Miscellaneous components                               -->
    <!-- ******************************************************* -->
        
    <bean id="standardActiveListFactory" 
             class="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory" scope="singleton">
        <constructor-arg ref="logMath" />
        <constructor-arg type="int" value="${speech.absoluteBeamWidth2}"/>
        <constructor-arg type="double" value="${speech.relativeBeamWidth2}"/>
    </bean>
    
    <bean name="wordActiveListFactory" 
             class="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory" scope="singleton">
        <constructor-arg ref="logMath" />
        <constructor-arg type="int" value="${speech.absoluteBeamWidth2}"/>
        <constructor-arg type="double" value="${speech.relativeBeamWidth2}"/>
    </bean>

    <bean name="unitManager"
               class="edu.cmu.sphinx.linguist.acoustic.UnitManager" scope="singleton" />

    <bean name="logMath"
               class="edu.cmu.sphinx.util.LogMath" scope="singleton">
        <constructor-arg type="float" value="1.0001"/>
        <constructor-arg type="boolean"  value="true"/>
    </bean>
    
    <bean name="confidenceScorer"
               class="edu.cmu.sphinx.result.MAPConfidenceScorer" scope="prototype">
        <constructor-arg index="0" type="float" value="${speech.linguist.lmlanguageWeight}"/>
        <constructor-arg index ="1" type="boolean" value="${speech.confidence.dumpLattice}"/>
        <constructor-arg index ="2" type="boolean" value="${speech.confidence.dumpSausage}"/>
    </bean>


    <bean name="dummy-frontend" class="edu.cmu.sphinx.frontend.FrontEnd">
        <constructor-arg index="0">         
	    	<list>
	    		<ref bean="identityStage"/>
	    	</list>
	    </constructor-arg>
    </bean>



    <bean name="file-frontend" class="edu.cmu.sphinx.frontend.FrontEnd">
        <constructor-arg index="0">         
	    	<list>
    			<ref bean="audioFileDataSource"/>
   			<ref bean="preemphasizer"/>
   			<ref bean="dither"/>
   			<ref bean="windower"/>
   			<ref bean="fft"/>
   			<ref bean="melFilterBank"/>
   			<ref bean="dct"/>
   			<ref bean="batchCMN"/>
   			<ref bean="featureExtraction"/>
	    	</list>
	    </constructor-arg>
    </bean>

   <bean name="identityStage"
               class="com.spokentech.speechdown.common.sphinx.IdentityStage"/>
               

    <bean name="emptyList" class="java.util.ArrayList" >
    </bean>


    <!-- ******************************************************** -->
    <!-- The Decoder 					                          -->
    <!-- ******************************************************** -->

    <bean name="recognizerLm" class="edu.cmu.sphinx.recognizer.Recognizer" scope="prototype">
        <constructor-arg index="0" ref="decoderLm"/>
       <constructor-arg index="1">         
	    	<list>
	    		<null/>
	    	</list>
    	</constructor-arg>
    </bean>
    
    <bean name="recognizerGramar" class="edu.cmu.sphinx.recognizer.Recognizer" scope="prototype">
        <constructor-arg index="0" ref="decoderGrammar"/>
       <constructor-arg index="1">         
	    	<list>
	    		<null/>
	    	</list>
    	</constructor-arg>
    </bean>



    <bean name="decoderLm" class="edu.cmu.sphinx.decoder.Decoder" scope="prototype">
        <constructor-arg index="0"  ref="searchManagerLm"/>
        <constructor-arg index="1"  value="${speech.decoder.fireNonFinalResults}"/>
        <constructor-arg index="2"  value="${speech.decoder.autoAllocate}"/>
        <constructor-arg index="3">         
	    	<list>
	    		<null/>
	    	</list>
    	</constructor-arg>

        <constructor-arg index="4"  value="${speech.decoder.featureBlockSize}"/>
    </bean>
    
    <bean name="decoderGrammar" class="edu.cmu.sphinx.decoder.Decoder" scope="prototype">
        <constructor-arg index="0"  ref="searchManagerLm"/>
        <constructor-arg index="1"  value="${speech.decoder.fireNonFinalResults}"/>
        <constructor-arg index="2"  value="${speech.decoder.autoAllocate}"/>
        <constructor-arg index="3">         
	    	<list>
	    		<null/>
	    	</list>
    	</constructor-arg>

        <constructor-arg index="4"  value="${speech.decoder.featureBlockSize}"/>
    </bean>


    <bean name="pruner"
               class="edu.cmu.sphinx.decoder.pruner.SimplePruner" scope="singleton"/>

    <bean name="scorer"
               class="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer" scope="prototype">
        <constructor-arg index="0"  ref="dummy-frontend"/>
        <constructor-arg index="1" type="edu.cmu.sphinx.decoder.scorer.ScoreNormalizer" ><null/></constructor-arg>
        <constructor-arg index="2"  type="int" value="${speech.scorer.minScoreablesPerThread}" />
        <constructor-arg index="3"  type="boolean" value="${speech.scorer.cpuRelative}" />
        <constructor-arg index="4" type="int"  value="${speech.scorer.numThreads}" />
        <constructor-arg index="5" type="int"  value="${speech.scorer.threadPriority}" />
    </bean>

   <bean name="searchManagerLm" 
              class="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager" scope="prototype">
		<constructor-arg index="0" ref="logMath"/>
        <constructor-arg index="1" ref="lexTreeLinguist"/>
       	<constructor-arg index="2" ref="pruner"/>
        <constructor-arg index="3" ref="scorer" />
       	<constructor-arg index="4" ref="activeListManager"/>
       	<constructor-arg index="5" type="boolean" value ="${speech.search.showTokenCount}" />
        <constructor-arg index="6" type="double" value="${speech.relativeBeamWidth2}"/>
        <constructor-arg index="7" type="int" value ="${speech.search.growSkipInterval}" />
        <constructor-arg index="8" type="boolean" value="${speech.search.checkStateOrder}" />
        <constructor-arg index="9" type="boolean" value="${speech.search.buildWordLattice}" />
        <constructor-arg index="10" type="int" value ="${speech.search.maxLatticeEdges}" />
        <constructor-arg index="11" type="float" value="${speech.search.acousticLookahead}"/>
        <constructor-arg index="12" type="boolean" value="${speech.search.keepAllTokens}"/>
    </bean>


   <bean name="searchManagerGrammar" 
              class="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager" scope="prototype">
		<constructor-arg index="0" ref="logMath"/>
        <constructor-arg index="1" ref="grammar-linguist"/>
       	<constructor-arg index="2" ref="pruner"/>
        <constructor-arg index="3" ref="scorer" />
       	<constructor-arg index="4" ref="activeListManager"/>
       	<constructor-arg index="5" type="boolean" value ="${speech.search.showTokenCount}" />
        <constructor-arg index="6" type="double" value="${speech.relativeBeamWidth2}"/>
        <constructor-arg index="7" type="int" value ="${speech.search.growSkipInterval}" />
        <constructor-arg index="8" type="boolean" value="${speech.search.checkStateOrder}" />
        <constructor-arg index="9" type="boolean" value="${speech.search.buildWordLattice}" />
        <constructor-arg index="10" type="int" value ="${speech.search.maxLatticeEdges}" />
        <constructor-arg index="11" type="float" value="${speech.search.acousticLookahead}"/>
        <constructor-arg index="12" type="boolean" value="${speech.search.keepAllTokens}"/>
   </bean>


    <bean name="activeListManager" 
             class="edu.cmu.sphinx.decoder.search.SimpleActiveListManager" scope="prototype">  
        <constructor-arg index="0">         
	    	<list>
	    		<ref bean="standardActiveListFactory"/>
		    	<ref bean="wordActiveListFactory"/>
		    	<ref bean="wordActiveListFactory"/>
		    	<ref bean="standardActiveListFactory"/>
		    	<ref bean="standardActiveListFactory"/>
		    	<ref bean="standardActiveListFactory"/>
	    	</list>
    	</constructor-arg>
    	<constructor-arg index="1" value ="${speech.search.checkPriorListsEmpty}"/>
  
    </bean>
    
    <!-- ******************************************************** -->
    <!-- The grammar linguist  configuration                      -->
    <!-- ******************************************************** -->

    <bean name="grammar-linguist"
               class="edu.cmu.sphinx.linguist.flat.FlatLinguist" scope="prototype">       
        <constructor-arg index="0" ref="acousticModel"/>
        <constructor-arg index="1" ref="logMath" />
        <constructor-arg index="2" ref="jsgf"/>
        <constructor-arg index="3" ref="unitManager" />
        <constructor-arg index="4" type="double" value="${speech.grammar.wordInsertionProbability}"/>
        <constructor-arg index="5" type="double" value="${speech.grammar.silenceInsertionProbability}"/>
        <constructor-arg index="6" type="double" value="${speech.grammar.fillerInsertionProbability}"/>
        <constructor-arg index="7"  type="double"  value="${speech.grammar.unitInsertionProbability}"/>
        <constructor-arg index="8" type="float" value="${speech.grammar.languageWeight}"/>
        <constructor-arg index="9"  type="boolean"  value="${speech.grammar.dumpGStates}"/>
        <constructor-arg index="10"  type="boolean"  value="${speech.grammar.showCompilationProgress}"/>
        <constructor-arg index="11" type="boolean" value="${speech.grammar.spreadWordProbabilitiesAcrossPronunciations}"/>
        <constructor-arg index="12" type="boolean" value="${speech.grammar.addOutOfGrammarBranch}"/>
        <constructor-arg index="13" type="double"  value="${speech.grammar.outOfGrammarProbability}" />
        <constructor-arg index="14" type="double" value="${speech.grammar.phoneInsertionProbability}" />
	<constructor-arg index="15" ref="acousticModel"/>
        <!--constructor-arg index="15" type="edu.cmu.sphinx.linguist.acoustic.AcousticModel" ><null/></constructor-arg-->
    </bean>


    <!-- ******************************************************** -->
    <!-- The Grammar  configuration                               -->
    <!-- ******************************************************** -->

    <bean name="jsgf" class="edu.cmu.sphinx.jsgf.JSGFGrammar" scope="singleton">
        <constructor-arg  index="0" type="java.lang.String" value="${speech.grammarLocation}"/>
        <constructor-arg  index="1" ref="logMath" />      
        <constructor-arg  index="2" type="java.lang.String" value="${speech.grammarName}"/>
        <constructor-arg  index="3" type="boolean" value="${speech.grammar.showGrammar}"/>
        <constructor-arg  index="4" type="boolean" value="${speech.grammar.optimizeGrammar}"/>
        <constructor-arg  index="5" type="boolean" value="${speech.grammar.addSilenceWords}"/>
        <constructor-arg  index="6" type="boolean" value="${speech.grammar.addFillerWords}"/>
        <constructor-arg  index="7" ref="dictionary" />
    </bean>



    <!--bytesPerRead -->
    <bean name="audioFileDataSource" class="edu.cmu.sphinx.frontend.util.AudioFileDataSource">
        <constructor-arg index="0" type="int" value ="3200" />
	<constructor-arg index="1">         
	    	<list>
	    		<null/>
	    	</list>
    	</constructor-arg>
    </bean>

    <!--preemphasisFactor -->
    <bean name="preemphasizer"
	    class="edu.cmu.sphinx.frontend.filter.Preemphasizer">
        <constructor-arg index="0" type="double" value ="0.97" />
    </bean>

    <bean name="dither"
	    class="edu.cmu.sphinx.frontend.filter.Dither">
        <constructor-arg index="0" type="double" value ="2.0" />
        <constructor-arg index="1" type="boolean" value ="false" />
        <constructor-arg index="2" type="double" value ="0.0" />
        <constructor-arg index="3" type="double" value ="0.0" />
	<!--double ditherMax, boolean useRandSeed, double maxValue, double minValue -->
	<!-- modified dither to use max double and min double if 0 is passed in here -->
    </bean>

    <bean name="windower"
	    class="edu.cmu.sphinx.frontend.window.RaisedCosineWindower">
        <constructor-arg index="0" type="double" value ="0.46" />
        <constructor-arg index="1" type="float" value ="25.625" />
        <constructor-arg index="2" type="float" value ="10.0" />
	    <!--double alpha, float windowSizeInMs, float windowShiftInMs -->
    </bean>

    <bean name="fft"
	    class="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform">
	        <constructor-arg index="0" type="int" value ="-1" />
        	<constructor-arg index="1" type="boolean" value ="false" />
	    <!-- int numberFftPoints, boolean invert-->
    </bean>

    <bean name="melFilterBank"
	    class="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
	    	<constructor-arg index="0" type="double" value ="130.0" />
        	<constructor-arg index="1" type="double" value ="6800.0" />
        	<constructor-arg index="2" type="int" value ="40" />
	    <!--double minFreq, double maxFreq, int numberFilters-->
    </bean>

    <bean name="dct"
	    class="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform">
	    	<constructor-arg index="0" type="int" value ="13" />
        	<constructor-arg index="1" type="int" value ="40" />
	    <!--int numberMelFilters, int cepstrumSize -->
    </bean>

    <bean name="batchCMN"
               class="edu.cmu.sphinx.frontend.feature.BatchCMN">
    </bean>

    <bean name="featureExtraction"
	    class="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor">
	    	<constructor-arg index="0" type="int" value ="3" />
	    <!--int window-->
    </bean>

	
</beans>
