<?xml version="1.0" encoding="UTF-8"?>


<!-- ******************************************************** -->
<!--  Sphinx-4 Configuration file for SpeechCloud Server      -->
<!-- ******************************************************** -->

<config>

    <!-- ******************************************************** -->
    <!-- frequently tuned properties                              -->
    <!-- ******************************************************** -->

    <property name="logLevel"                    value="INFO"/>
    <property name="logTerse"                    value="true"/>
    <property name="showCreations"               value="false"/>

    <property name="absoluteBeamWidth"           value="25000"/>
    <property name="relativeBeamWidth"           value="1E-80"/>

    <property name="absoluteBeamWidth2"  value="25000"/>
    <property name="relativeBeamWidth2"  value="1E-80"/>
    <property name="absoluteWordBeamWidth2" value="20"/>
    <property name="relativeWordBeamWidth2" value="1E-60"/>
    
    <property name="wordInsertionProbability"    value="0.7"/>
    <property name="languageWeight"              value="7"/>
    <property name="silenceInsertionProbability" value="1"/>

    <property name="lmwordInsertionProbability" value="0.7"/>
    <property name="lmlanguageWeight" value="7"/>
    <property name="lmsilenceInsertionProbability" value=".1"/>

    <property name="speechClassifierThreshold" value="13"/>
    
    
    <property name="languageModelFile"          value="file:///home/eli/Desktop/lm/lm_giga_64k_vp_3gram/64k/lm_giga_64k_vp_3gram.arpa.DMP"/>

	<!-- these are only needed to create the pool of recognizers.  Should be able to find a better way to create a recognizer without a grammar -->
    <property name="grammarLocation"             value="resource:/com.spokentech.speechdown.server.RecognizerService!/../../grammar"/>
    <property name="grammarName"                 value="example"/>




    <!-- ******************************************************** -->
    <!-- shared components configuration                           -->
    <!-- ******************************************************** -->
    
    <component name="standardActiveListFactory" 
             type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth2}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth2}"/>
    </component>
    
    <component name="wordActiveListFactory" 
             type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteWordBeamWidth2}"/>
        <property name="relativeBeamWidth" value="${relativeWordBeamWidth2}"/>
    </component>
    
    <!-- ******************************************************** -->
    <!-- The language model linguist  configuration               -->
    <!-- ******************************************************** -->
    
    <component name="lexTreeLinguist" 
                type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="logMath" value="logMath"/>
        <property name="acousticModel" value="acousticModel"/>
        <property name="languageModel" value="trigramModel"/>
        <property name="dictionary" value="dictionary"/>
        <property name="addFillerWords" value="false"/>
        <property name="fillerInsertionProbability" value="1E-10"/>
        <property name="generateUnitStates" value="false"/>
        <property name="wantUnigramSmear" value="true"/>
        <property name="unigramSmearWeight" value="1"/>
        <property name="wordInsertionProbability" 
                value="${lmwordInsertionProbability}"/>
        <property name="silenceInsertionProbability" 
                value="${lmsilenceInsertionProbability}"/>
        <property name="languageWeight" value="${lmlanguageWeight}"/>
        <property name="unitManager" value="unitManager"/>
    </component>    
    

    <component name="trigramModel"
           type="edu.cmu.sphinx.linguist.language.ngram.large.LargeTrigramModel">
        <property name="location"
		value="${languageModelFile}"/>
        <property name="logMath" value="logMath"/>
        <property name="dictionary" value="dictionary"/>
        <property name="maxDepth" value="3"/>
        <property name="unigramWeight" value=".7"/>
    </component>


    <!-- ******************************************************** -->
    <!-- The grammar linguist  configuration                      -->
    <!-- ******************************************************** -->

    <component name="linguist"
               type="edu.cmu.sphinx.linguist.flat.FlatLinguist">
        <property name="logMath" value="logMath"/>
        <property name="grammar" value="grammar"/>
        <property name="acousticModel" value="acousticModel"/>
        <property name="wordInsertionProbability" value="${wordInsertionProbability}"/>
        <property name="silenceInsertionProbability" value="${silenceInsertionProbability}"/>
        <property name="languageWeight" value="${languageWeight}"/>
        <property name="unitManager" value="unitManager"/>
        <!--property name="addOutOfGrammarBranch" value="true"/-->
        <!--property name="outOfGrammarProbability" value="1E-60"/-->
        <!--property name="phoneInsertionProbability" value="1E-10"/-->
        <!--property name="phoneLoopAcousticModel" value="acousticModel"/-->
    </component>


    <!-- ******************************************************** -->
    <!-- The Grammar  configuration                               -->
    <!-- ******************************************************** -->

    <component name="grammar" type="edu.cmu.sphinx.jsapi.JSGFGrammar">
        <property name="dictionary" value="dictionary"/>
        <property name="grammarLocation" value="${grammarLocation}"/>
        <property name="grammarName" value="${grammarName}"/>
        <property name="logMath" value="logMath"/>
    </component>



    <!-- ******************************************************** -->
    <!-- The Dictionary configuration                            -->
    <!-- ******************************************************** -->

    <!--component name="dictionary"  type="edu.cmu.sphinx.linguist.dictionary.FastDictionary">
        <property name="dictionaryPath" value="resource:/edu.cmu.sphinx.model.acoustic.WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz.Model!/edu/cmu/sphinx/model/acoustic/WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz/dict/cmudict.0.6d"/>
        <property name="fillerPath" value="resource:/edu.cmu.sphinx.model.acoustic.WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz.Model!/edu/cmu/sphinx/model/acoustic/WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz/dict/fillerdict"/>
        <property name="addSilEndingPronunciation" value="false"/>
        <property name="allowMissingWords" value="false"/>
        <property name="unitManager" value="unitManager"/>
    </component-->


    <component name="dictionary" type="edu.cmu.sphinx.linguist.dictionary.FastDictionary">
        <property name="dictionaryPath"
              value="file:///home/eli/nlp/metrocave/mcmodel/etc/cmudict.0.7a"/>
        <property name="fillerPath"
              value="file:///home/eli/nlp/metrocave/mcmodel/etc/mcmodel.filler"/>
        <property name="addSilEndingPronunciation" value="false"/>
        <property name="wordReplacement" value="&lt;sil&gt;"/>
        <property name="unitManager" value="unitManager"/>
    </component>



    <!-- ******************************************************** -->
    <!-- The acoustic model configuration                         -->
    <!-- ******************************************************** -->

    <!--component name="acousticModel"  type="edu.cmu.sphinx.model.acoustic.WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz.Model">
        <property name="loader" value="loader"/>
        <property name="unitManager" value="unitManager"/>
    </component-->

    <!--component name="loader" type="edu.cmu.sphinx.model.acoustic.WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz.ModelLoader">
        <property name="logMath" value="logMath"/>
        <property name="unitManager" value="unitManager"/>
   </component-->


    <component name="acousticModel"  type="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel">
        <property name="loader" value="loader"/>
        <property name="unitManager" value="unitManager"/>
    </component>

    <component name="loader"
           type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
        <property name="logMath" value="logMath"/>
        <property name="unitManager" value="unitManager"/>
        <property name="propertiesFile"
              value="file:///home/eli/nlp/cairo/bkup/sphinx4/models/acoustic/mcmodel/model2.props" />
        <property name="dataLocation" value="file:///home/eli/nlp/metrocave/mcmodel/model_parameters/mcmodel.cd_cont_8000"/>
        <property name="modelDefinition" value="file:///home/eli/nlp/metrocave/mcmodel/model_parameters/mcmodel.cd_cont_8000/mdef"/>
    </component>

    
<!-- WSJ_8gau_13dCep_8kHz_31mel_200Hz_3500Hz WSJ_8gau_13dCep_16k_40mel_130Hz_6800Hz -->

    <!-- ******************************************************** -->
    <!-- The unit manager configuration                           -->
    <!-- ******************************************************** -->

    <component name="unitManager"
               type="edu.cmu.sphinx.linguist.acoustic.UnitManager"/>



    <!-- ******************************************************** -->
    <!-- Start of components that can not be shared               -->
    <!-- decoders and front ends                                  -->
    <!-- sets of then are defined to be used in pools             -->
    <!--                 At present 4 pools                       -->
    <!--   1. feature frontend, no endpointing, grammar support   -->
    <!--   2. audio frontend, no endpointing, grammar support     -->
    <!--   3. feature frontend, no endppointing, lm support       -->
    <!--   4. audio frontend, noendppointing, lm support          -->
    <!--   5. audio frontend, endppointing, lm support            -->
    <!-- ******************************************************** -->
    
    
    

	<!-- *******************************************************   -->
	<!-- *** Feature frontend, without endpointing, grammars ***   -->
    <!-- *******************************************************   -->
		
    <!-- ******************************************************** -->
    <!-- word recognizer configuration  #1                        -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer1" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder1"/>
        <!--propertylist name="monitors"-->
            <!--item>accuracyTracker </item-->
            <!--item>speedTracker </item-->
            <!--item>memoryTracker </item-->
        <!--/propertylist-->
    </component>


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #1                          -->
    <!-- ******************************************************** -->

    <component name="feature-decoder1" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager1"/>
    </component>

    <component name="feature-searchManager1"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner1"/>
        <property name="scorer" value="feature-scorer1"/>
        <property name="activeListFactory" value="feature-activeListFactory1"/>
    </component>

    <component name="feature-activeListFactory1"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner1"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer1"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend1"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #2                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer2" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder2"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #2                       -->
    <!-- ******************************************************** -->

    <component name="feature-decoder2" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager2"/>
    </component>

    <component name="feature-searchManager2"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner2"/>
        <property name="scorer" value="feature-scorer2"/>
        <property name="activeListFactory" value="feature-activeListFactory2"/>
    </component>

    <component name="feature-activeListFactory2"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner2"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer2"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend2"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #3                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer3" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder3"/>
    </component>
    

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #3                          -->
    <!-- ******************************************************** -->

    <component name="feature-decoder3" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager3"/>
    </component>

    <component name="feature-searchManager3"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner3"/>
        <property name="scorer" value="feature-scorer3"/>
        <property name="activeListFactory" value="feature-activeListFactory3"/>
    </component>

    <component name="feature-activeListFactory3"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner3"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer3"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend3"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #4                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer4" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder4"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #4                       -->
    <!-- ******************************************************** -->

    <component name="feature-decoder4" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager4"/>
    </component>

    <component name="feature-searchManager4"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner4"/>
        <property name="scorer" value="feature-scorer4"/>
        <property name="activeListFactory" value="feature-activeListFactory4"/>
    </component>

    <component name="feature-activeListFactory4"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner4"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer4"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend4"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>

    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #5                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer5" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder5"/>
    </component>


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #5                          -->
    <!-- ******************************************************** -->

    <component name="feature-decoder5" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager5"/>
    </component>

    <component name="feature-searchManager5"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner5"/>
        <property name="scorer" value="feature-scorer5"/>
        <property name="activeListFactory" value="feature-activeListFactory5"/>
    </component>

    <component name="feature-activeListFactory5"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner5"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer5"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend5"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #6                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer6" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder6"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #6                       -->
    <!-- ******************************************************** -->

    <component name="feature-decoder6" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager6"/>
    </component>

    <component name="feature-searchManager6"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner6"/>
        <property name="scorer" value="feature-scorer6"/>
        <property name="activeListFactory" value="feature-activeListFactory6"/>
    </component>

    <component name="feature-activeListFactory6"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner6"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer6"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend6"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #7                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer7" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder7"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #7                          -->
    <!-- ******************************************************** -->

    <component name="feature-decoder7" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager7"/>
    </component>

    <component name="feature-searchManager7"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner7"/>
        <property name="scorer" value="feature-scorer7"/>
        <property name="activeListFactory" value="feature-activeListFactory7"/>
    </component>

    <component name="feature-activeListFactory7"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner7"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer7"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend7"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #8                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer8" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder8"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #8                       -->
    <!-- ******************************************************** -->

    <component name="feature-decoder8" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager8"/>
    </component>

    <component name="feature-searchManager8"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner8"/>
        <property name="scorer" value="feature-scorer8"/>
        <property name="activeListFactory" value="feature-activeListFactory8"/>
    </component>

    <component name="feature-activeListFactory8"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner8"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer8"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend8"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #9                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer9" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder9"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #9                          -->
    <!-- ******************************************************** -->

    <component name="feature-decoder9" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager9"/>
    </component>

    <component name="feature-searchManager9"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner9"/>
        <property name="scorer" value="feature-scorer9"/>
        <property name="activeListFactory" value="feature-activeListFactory9"/>
    </component>

    <component name="feature-activeListFactory9"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner9"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer9"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend9"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #10                      -->
    <!-- ******************************************************** -->

    <component name="feature-recognizer10" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-decoder10"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #10                       -->
    <!-- ******************************************************** -->

    <component name="feature-decoder10" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-searchManager10"/>
    </component>

    <component name="feature-searchManager10"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="feature-pruner10"/>
        <property name="scorer" value="feature-scorer10"/>
        <property name="activeListFactory" value="feature-activeListFactory10"/>
    </component>

    <component name="feature-activeListFactory10"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-pruner10"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-scorer10"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-frontend10"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->
    
    
    <component name="feature-frontend1" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage1</item>
        </propertylist>
    </component>
    

    <component name="feature-identityStage1" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

 

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-frontend2" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage2</item>
        </propertylist>
    </component>
    

    <component name="feature-identityStage2" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


   <!-- ******************************************************** -->
    <!-- The frontend configuration #3                              -->
    <!-- ******************************************************** -->

    <component name="feature-frontend3" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage3</item>
        </propertylist>
    </component>
    

    <component name="feature-identityStage3" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-frontend4" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage4</item>
        </propertylist>
    </component>
    
    <component name="feature-identityStage4" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-frontend5" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage5</item>
        </propertylist>
    </component>
    
    <component name="feature-identityStage5" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   
    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-frontend6" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage6</item>
        </propertylist>
    </component>
    

    <component name="feature-identityStage6" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

  

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-frontend7" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage7</item>
        </propertylist>
    </component>

    <component name="feature-identityStage7" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   


    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-frontend8" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage8</item>
        </propertylist>
    </component>
    
    <component name="feature-identityStage8" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-frontend9" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage9</item>
        </propertylist>
    </component>
    
    <component name="feature-identityStage9" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-frontend10" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-identityStage10</item>
        </propertylist>
    </component>
    

    <component name="feature-identityStage10" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>
               

    
    
    <!-- *******************************************************   -->
	<!-- *** Audio frontend, without endpointing, grammars   ***   -->
    <!-- *******************************************************   -->

	
    <!-- ******************************************************** -->
    <!-- word recognizer configuration  #1                        -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer1" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder1"/>
        <!--propertylist name="monitors"-->
            <!--item>accuracyTracker </item-->
            <!--item>speedTracker </item-->
            <!--item>memoryTracker </item-->
        <!--/propertylist-->
    </component>


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #1                          -->
    <!-- ******************************************************** -->

    <component name="audio-decoder1" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager1"/>
    </component>

    <component name="audio-searchManager1"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner1"/>
        <property name="scorer" value="audio-scorer1"/>
        <property name="activeListFactory" value="audio-activeListFactory1"/>
    </component>

    <component name="audio-activeListFactory1"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner1"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer1"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend1"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #2                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer2" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder2"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #2                       -->
    <!-- ******************************************************** -->

    <component name="audio-decoder2" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager2"/>
    </component>

    <component name="audio-searchManager2"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner2"/>
        <property name="scorer" value="audio-scorer2"/>
        <property name="activeListFactory" value="audio-activeListFactory2"/>
    </component>

    <component name="audio-activeListFactory2"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner2"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer2"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend2"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #3                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer3" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder3"/>
    </component>
    

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #3                          -->
    <!-- ******************************************************** -->

    <component name="audio-decoder3" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager3"/>
    </component>

    <component name="audio-searchManager3"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner3"/>
        <property name="scorer" value="audio-scorer3"/>
        <property name="activeListFactory" value="audio-activeListFactory3"/>
    </component>

    <component name="audio-activeListFactory3"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner3"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer3"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend3"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #4                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer4" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder4"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #4                       -->
    <!-- ******************************************************** -->

    <component name="audio-decoder4" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager4"/>
    </component>

    <component name="audio-searchManager4"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner4"/>
        <property name="scorer" value="audio-scorer4"/>
        <property name="activeListFactory" value="audio-activeListFactory4"/>
    </component>

    <component name="audio-activeListFactory4"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner4"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer4"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend4"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>

    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #5                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer5" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder5"/>
    </component>


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #5                          -->
    <!-- ******************************************************** -->

    <component name="audio-decoder5" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager5"/>
    </component>

    <component name="audio-searchManager5"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner5"/>
        <property name="scorer" value="audio-scorer5"/>
        <property name="activeListFactory" value="audio-activeListFactory5"/>
    </component>

    <component name="audio-activeListFactory5"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner5"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer5"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend5"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #6                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer6" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder6"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #6                       -->
    <!-- ******************************************************** -->

    <component name="audio-decoder6" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager6"/>
    </component>

    <component name="audio-searchManager6"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner6"/>
        <property name="scorer" value="audio-scorer6"/>
        <property name="activeListFactory" value="audio-activeListFactory6"/>
    </component>

    <component name="audio-activeListFactory6"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner6"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer6"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend6"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #7                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer7" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder7"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #7                          -->
    <!-- ******************************************************** -->

    <component name="audio-decoder7" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager7"/>
    </component>

    <component name="audio-searchManager7"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner7"/>
        <property name="scorer" value="audio-scorer7"/>
        <property name="activeListFactory" value="audio-activeListFactory7"/>
    </component>

    <component name="audio-activeListFactory7"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner7"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer7"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend7"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #8                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer8" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder8"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #8                       -->
    <!-- ******************************************************** -->

    <component name="audio-decoder8" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager8"/>
    </component>

    <component name="audio-searchManager8"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner8"/>
        <property name="scorer" value="audio-scorer8"/>
        <property name="activeListFactory" value="audio-activeListFactory8"/>
    </component>

    <component name="audio-activeListFactory8"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner8"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer8"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend8"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #9                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer9" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder9"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #9                          -->
    <!-- ******************************************************** -->

    <component name="audio-decoder9" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager9"/>
    </component>

    <component name="audio-searchManager9"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner9"/>
        <property name="scorer" value="audio-scorer9"/>
        <property name="activeListFactory" value="audio-activeListFactory9"/>
    </component>

    <component name="audio-activeListFactory9"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner9"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer9"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend9"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #10                      -->
    <!-- ******************************************************** -->

    <component name="audio-recognizer10" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-decoder10"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #10                       -->
    <!-- ******************************************************** -->

    <component name="audio-decoder10" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-searchManager10"/>
    </component>

    <component name="audio-searchManager10"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="linguist"/>
        <property name="pruner" value="audio-pruner10"/>
        <property name="scorer" value="audio-scorer10"/>
        <property name="activeListFactory" value="audio-activeListFactory10"/>
    </component>

    <component name="audio-activeListFactory10"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-pruner10"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-scorer10"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-frontend10"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>


  <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend1" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource1</item-->
            <!--item>audio-speechDataRecorder1</item-->
            <item>audio-preemphasizer1</item>
            <item>audio-dither1</item>
            <item>audio-windower1</item>
            <item>audio-fft1</item>
            <item>audio-melFilterBank1</item>
            <item>audio-dct1</item>
            <item>audio-cmn1</item>
            <item>audio-featureExtraction1</item>
            <item>audio-identityStage1</item>
                        <item>audio-LDA1</item>
        </propertylist>
    </component>
    

    <component name="audio-identityStage1" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-streamDataSource1" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder1"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer1"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither1"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower1"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft1"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank1"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct1"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn1"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction1"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>
               
    <component name="audio-LDA1" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend2" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource2</item-->
            <!--item>audio-speechDataRecorder2</item-->
            <item>audio-preemphasizer2</item>
            <item>audio-dither2</item>
            <item>audio-windower2</item>
            <item>audio-fft2</item>
            <item>audio-melFilterBank2</item>
            <item>audio-dct2</item>
            <item>audio-cmn2</item>
            <item>audio-featureExtraction2</item>
                        <item>audio-LDA2</item>
            <!--item>audio-identityStage2</item-->
        </propertylist>
    </component>
    

    <component name="audio-identityStage2" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

    <component name="audio-streamDataSource2" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder2"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer2"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither2"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower2"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft2"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank2"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct2"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn2"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction2"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-LDA2" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

   <!-- ******************************************************** -->
    <!-- The frontend configuration #3                              -->
    <!-- ******************************************************** -->

    <component name="audio-frontend3" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource3</item-->
            <!--item>audio-speechDataRecorder3</item-->
            <item>audio-preemphasizer3</item>
            <item>audio-dither3</item>
            <item>audio-windower3</item>
            <item>audio-fft3</item>
            <item>audio-melFilterBank3</item>
            <item>audio-dct3</item>
            <item>audio-cmn3</item>
            <item>audio-featureExtraction3</item>
                        <item>audio-LDA3</item>
            <!--item>audio-identityStage3</item-->
        </propertylist>
    </component>
    

    <component name="audio-identityStage3" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

    <component name="audio-streamDataSource3" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder3"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer3"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither3"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower3"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft3"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank3"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct3"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn3"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction3"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-LDA3" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend4" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource4</item-->
            <!--item>audio-speechDataRecorder4</item-->
            <item>audio-preemphasizer4</item>
            <item>audio-dither4</item>
            <item>audio-windower4</item>
            <item>audio-fft4</item>
            <item>audio-melFilterBank4</item>
            <item>audio-dct4</item>
            <item>audio-cmn4</item>
            <item>audio-featureExtraction4</item>
                        <item>audio-LDA4</item>
                        <!--item>audio-identityStage4</item-->
        </propertylist>
    </component>


    <component name="audio-identityStage4" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>
    

    <component name="audio-streamDataSource4" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder4"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer4"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither4"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower4"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft4"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank4"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct4"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn4"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction4"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-LDA4" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend5" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource5</item-->
            <!--item>audio-speechDataRecorder5</item-->
            <item>audio-preemphasizer5</item>
            <item>audio-dither5</item>
            <item>audio-windower5</item>
            <item>audio-fft5</item>
            <item>audio-melFilterBank5</item>
            <item>audio-dct5</item>
            <item>audio-cmn5</item>
            <item>audio-featureExtraction5</item>
                        <item>audio-LDA5</item>
                        <!--item>audio-identityStage5</item-->
        </propertylist>
    </component>


    <component name="audio-identityStage5" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>
    

    <component name="audio-streamDataSource5" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder5"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer5"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither5"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower5"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft5"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank5"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct5"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn5"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction5"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-LDA5" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>
	
    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend6" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource6</item-->
            <!--item>audio-speechDataRecorder6</item-->
            <item>audio-preemphasizer6</item>
            <item>audio-dither6</item>
            <item>audio-windower6</item>
            <item>audio-fft6</item>
            <item>audio-melFilterBank6</item>
            <item>audio-dct6</item>
            <item>audio-cmn6</item>
            <item>audio-featureExtraction6</item>
                        <item>audio-LDA6</item>
                        <!--item>audio-identityStage6</item-->
        </propertylist>
    </component>
    


    <component name="audio-identityStage6" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-streamDataSource6" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder6"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer6"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither6"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower6"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft6"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank6"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct6"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn6"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction6"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-LDA6" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend7" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource7</item-->
            <!--item>audio-speechDataRecorder7</item-->
            <item>audio-preemphasizer7</item>
            <item>audio-dither7</item>
            <item>audio-windower7</item>
            <item>audio-fft7</item>
            <item>audio-melFilterBank7</item>
            <item>audio-dct7</item>
            <item>audio-cmn7</item>
            <item>audio-featureExtraction7</item>
            <item>audio-LDA7</item>
                        <!--item>audio-identityStage7</item-->
        </propertylist>
    </component>
    


    <component name="audio-identityStage7" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-streamDataSource7" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder7"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer7"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither7"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower7"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft7"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank7"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct7"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn7"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction7"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>
               
    <component name="audio-LDA7" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend8" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource8</item-->
            <!--item>audio-speechDataRecorder8</item-->
            <item>audio-preemphasizer8</item>
            <item>audio-dither8</item>
            <item>audio-windower8</item>
            <item>audio-fft8</item>
            <item>audio-melFilterBank8</item>
            <item>audio-dct8</item>
            <item>audio-cmn8</item>
            <item>audio-featureExtraction8</item>
                        <item>audio-LDA8</item>
                        <!--item>audio-identityStage8</item-->
        </propertylist>
    </component>
    


    <component name="audio-identityStage8" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-streamDataSource8" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder8"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer8"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither8"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower8"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft8"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank8"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct8"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn8"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction8"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-LDA8" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend9" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource9</item-->
            <!--item>audio-speechDataRecorder9</item-->
            <item>audio-preemphasizer9</item>
            <item>audio-dither9</item>
            <item>audio-windower9</item>
            <item>audio-fft9</item>
            <item>audio-melFilterBank9</item>
            <item>audio-dct9</item>
            <item>audio-cmn9</item>
            <item>audio-featureExtraction9</item>
                        <item>audio-LDA9</item>
                        <!--item>audio-identityStage9</item-->
        </propertylist>
    </component>
    


    <component name="audio-identityStage9" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-streamDataSource9" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder9"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer9"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither9"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower9"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft9"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank9"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct9"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn9"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction9"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-LDA9" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-frontend10" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-streamDataSource10</item-->
            <!--item>audio-speechDataRecorder10</item-->
            <item>audio-preemphasizer10</item>
            <item>audio-dither10</item>
            <item>audio-windower10</item>
            <item>audio-fft10</item>
            <item>audio-melFilterBank10</item>
            <item>audio-dct10</item>
            <item>audio-cmn10</item>
            <item>audio-featureExtraction10</item>
            <item>audio-LDA10</item>
            <!--item>audio-identityStage10</item-->
        </propertylist>
    </component>
    


    <component name="audio-identityStage10" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-streamDataSource10" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-speechDataRecorder10"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-preemphasizer10"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-dither10"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-windower10"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-fft10"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-melFilterBank10"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-dct10"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-cmn10"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-featureExtraction10"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>


    <component name="audio-LDA10" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>               
               

    <!-- ***************************************************************   -->
	<!-- *** Feature frontend, without endpointing, language model   ***   -->
    <!-- ***************************************************************   -->


    <!-- ******************************************************** -->
    <!-- word recognizer configuration  #1                        -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer1" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder1"/>
        <!--propertylist name="monitors"-->
            <!--item>accuracyTracker </item-->
            <!--item>speedTracker </item-->
            <!--item>memoryTracker </item-->
        <!--/propertylist-->
    </component>


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #1                          -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder1" type="edu.cmu.sphinx.decoder.Decoder">
      <property name="searchManager" value="feature-lm-searchManager1"/>
      <property name="featureBlockSize" value="50"/>
    </component>


    <component name="feature-lm-searchManager1" 
              type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="feature-lm-lexTreeLinguist1"/>
        <property name="pruner" value="feature-lm-pruner1"/>
        <property name="scorer" value="feature-lm-scorer1"/>
        <property name="activeListManager" value="feature-lm-activeListManager1"/>
        <property name="growSkipInterval" value="0"/>
        <property name="checkStateOrder" value="false"/>
        <property name="buildWordLattice" value="false"/>
        <property name="acousticLookaheadFrames" value="1.7"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth2}"/>
    </component>

    <component name="feature-lm-activeListManager1" 
	    type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
	<propertylist name="activeListFactories">
	    <item>standardActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	</propertylist>
    </component>
    


    <component name="feature-lm-pruner1"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer1"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend1"/>
        <property name="isCpuRelative" value="true"/>
        <property name="numThreads" value="0"/>
        <property name="minScoreablesPerThread" value="10"/>
        <property name="scoreablesKeepFeature" value="true"/>
    </component>

    <component name="feature-lm-lexTreeLinguist1" 
                type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="logMath" value="logMath"/>
        <property name="acousticModel" value="acousticModel"/>
        <property name="languageModel" value="trigramModel"/>
        <property name="dictionary" value="dictionary"/>
        <property name="addFillerWords" value="false"/>
        <property name="fillerInsertionProbability" value="1E-10"/>
        <property name="generateUnitStates" value="false"/>
        <property name="wantUnigramSmear" value="true"/>
        <property name="unigramSmearWeight" value="1"/>
        <property name="wordInsertionProbability" 
                value="${lmwordInsertionProbability}"/>
        <property name="silenceInsertionProbability" 
                value="${lmsilenceInsertionProbability}"/>
        <property name="languageWeight" value="${lmlanguageWeight}"/>
        <property name="unitManager" value="unitManager"/>
    </component>    


    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #2                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer2" type="edu.cmu.sphinx.recognizer.Recognizer">
	    <property name="decoder" value="feature-lm-decoder2"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #2                       -->
    <!-- ******************************************************** -->



    <component name="feature-lm-decoder2" type="edu.cmu.sphinx.decoder.Decoder">
      <property name="searchManager" value="feature-lm-searchManager2"/>
      <property name="featureBlockSize" value="50"/>
    </component>


    <component name="feature-lm-searchManager2" 
              type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="feature-lm-lexTreeLinguist2"/>
        <property name="pruner" value="feature-lm-pruner2"/>
        <property name="scorer" value="feature-lm-scorer2"/>
        <property name="activeListManager" value="feature-lm-activeListManager2"/>
        <property name="growSkipInterval" value="0"/>
        <property name="checkStateOrder" value="false"/>
        <property name="buildWordLattice" value="false"/>
        <property name="acousticLookaheadFrames" value="1.7"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth2}"/>
    </component>

    <component name="feature-lm-activeListManager2" 
             type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
	<propertylist name="activeListFactories">
	    <item>standardActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	</propertylist>
    </component>
    
    <component name="feature-lm-pruner2"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer2"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend2"/>
        <property name="isCpuRelative" value="true"/>
        <property name="numThreads" value="0"/>
        <property name="minScoreablesPerThread" value="10"/>
        <property name="scoreablesKeepFeature" value="true"/>
    </component>

      <component name="feature-lm-lexTreeLinguist2" 
                type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="logMath" value="logMath"/>
        <property name="acousticModel" value="acousticModel"/>
        <property name="languageModel" value="trigramModel"/>
        <property name="dictionary" value="dictionary"/>
        <property name="addFillerWords" value="false"/>
        <property name="fillerInsertionProbability" value="1E-10"/>
        <property name="generateUnitStates" value="false"/>
        <property name="wantUnigramSmear" value="true"/>
        <property name="unigramSmearWeight" value="1"/>
        <property name="wordInsertionProbability" 
                value="${lmwordInsertionProbability}"/>
        <property name="silenceInsertionProbability" 
                value="${lmsilenceInsertionProbability}"/>
        <property name="languageWeight" value="${lmlanguageWeight}"/>
        <property name="unitManager" value="unitManager"/>
    </component>    


    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #3                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer3" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder3"/>
    </component>
    

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #3                          -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder3" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-lm-searchManager3"/>
    </component>

    <component name="feature-lm-searchManager3"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="feature-lm-pruner3"/>
        <property name="scorer" value="feature-lm-scorer3"/>
        <property name="activeListFactory" value="feature-lm-activeListFactory3"/>
    </component>

    <component name="feature-lm-activeListFactory3"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-lm-pruner3"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer3"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend3"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #4                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer4" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder4"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #4                       -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder4" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-lm-searchManager4"/>
    </component>

    <component name="feature-lm-searchManager4"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="feature-lm-pruner4"/>
        <property name="scorer" value="feature-lm-scorer4"/>
        <property name="activeListFactory" value="feature-lm-activeListFactory4"/>
    </component>

    <component name="feature-lm-activeListFactory4"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-lm-pruner4"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer4"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend4"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>

    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #5                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer5" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder5"/>
    </component>


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #5                          -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder5" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-lm-searchManager5"/>
    </component>

    <component name="feature-lm-searchManager5"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="feature-lm-pruner5"/>
        <property name="scorer" value="feature-lm-scorer5"/>
        <property name="activeListFactory" value="feature-lm-activeListFactory5"/>
    </component>

    <component name="feature-lm-activeListFactory5"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-lm-pruner5"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer5"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend5"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #6                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer6" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder6"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #6                       -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder6" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-lm-searchManager6"/>
    </component>

    <component name="feature-lm-searchManager6"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="feature-lm-pruner6"/>
        <property name="scorer" value="feature-lm-scorer6"/>
        <property name="activeListFactory" value="feature-lm-activeListFactory6"/>
    </component>

    <component name="feature-lm-activeListFactory6"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-lm-pruner6"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer6"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend6"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #7                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer7" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder7"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #7                          -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder7" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-lm-searchManager7"/>
    </component>

    <component name="feature-lm-searchManager7"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="feature-lm-pruner7"/>
        <property name="scorer" value="feature-lm-scorer7"/>
        <property name="activeListFactory" value="feature-lm-activeListFactory7"/>
    </component>

    <component name="feature-lm-activeListFactory7"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-lm-pruner7"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer7"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend7"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #8                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer8" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder8"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #8                       -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder8" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-lm-searchManager8"/>
    </component>

    <component name="feature-lm-searchManager8"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="feature-lm-pruner8"/>
        <property name="scorer" value="feature-lm-scorer8"/>
        <property name="activeListFactory" value="feature-lm-activeListFactory8"/>
    </component>

    <component name="feature-lm-activeListFactory8"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-lm-pruner8"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer8"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend8"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #9                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer9" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder9"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #9                          -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder9" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-lm-searchManager9"/>
    </component>

    <component name="feature-lm-searchManager9"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="feature-lm-pruner9"/>
        <property name="scorer" value="feature-lm-scorer9"/>
        <property name="activeListFactory" value="feature-lm-activeListFactory9"/>
    </component>

    <component name="feature-lm-activeListFactory9"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-lm-pruner9"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer9"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend9"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #10                      -->
    <!-- ******************************************************** -->

    <component name="feature-lm-recognizer10" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="feature-lm-decoder10"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #10                       -->
    <!-- ******************************************************** -->

    <component name="feature-lm-decoder10" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="feature-lm-searchManager10"/>
    </component>

    <component name="feature-lm-searchManager10"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="feature-lm-pruner10"/>
        <property name="scorer" value="feature-lm-scorer10"/>
        <property name="activeListFactory" value="feature-lm-activeListFactory10"/>
    </component>

    <component name="feature-lm-activeListFactory10"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="feature-lm-pruner10"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="feature-lm-scorer10"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="feature-lm-frontend10"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    

  
    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->
    
    
    <component name="feature-lm-frontend1" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage1</item>
        </propertylist>
    </component>
    

    <component name="feature-lm-identityStage1" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

 

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend2" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage2</item>
        </propertylist>
    </component>
    

    <component name="feature-lm-identityStage2" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


   <!-- ******************************************************** -->
    <!-- The frontend configuration #3                              -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend3" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage3</item>
        </propertylist>
    </component>
    

    <component name="feature-lm-identityStage3" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend4" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage4</item>
        </propertylist>
    </component>
    
    <component name="feature-lm-identityStage4" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend5" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage5</item>
        </propertylist>
    </component>
    
    <component name="feature-lm-identityStage5" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   
    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend6" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage6</item>
        </propertylist>
    </component>
    

    <component name="feature-lm-identityStage6" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

  

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend7" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>identityStage7</item>
        </propertylist>
    </component>

    <component name="identityStage7" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   


    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend8" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage8</item>
        </propertylist>
    </component>
    
    <component name="feature-lm-identityStage8" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend9" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage9</item>
        </propertylist>
    </component>
    
    <component name="feature-lm-identityStage9" 
                  type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

   

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="feature-lm-frontend10" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <item>feature-lm-identityStage10</item>
        </propertylist>
    </component>
    

    <component name="feature-lm-identityStage10" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>
               
               
              
    <!-- ***************************************************************   -->
	<!-- *** Audio frontend, with endpointing, language model      ***   -->
    <!-- ***************************************************************   -->
              
               
    <!-- ******************************************************** -->
    <!-- word recognizer configuration  #1                        -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer1" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder1"/>
        <!--propertylist name="monitors"-->
            <!--item>accuracyTracker </item-->
            <!--item>speedTracker </item-->
            <!--item>memoryTracker </item-->
        <!--/propertylist-->
    </component>



    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #1                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder1" type="edu.cmu.sphinx.decoder.Decoder">
      <property name="searchManager" value="audio-lm-ep-searchManager1"/>
      <property name="featureBlockSize" value="50"/>
    </component>


    <component name="audio-lm-ep-searchManager1" 
              type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="audio-lm-ep-lexTreeLinguist1"/>
        <property name="pruner" value="audio-lm-ep-pruner1"/>
        <property name="scorer" value="audio-lm-ep-scorer1"/>
        <property name="activeListManager" value="audio-lm-ep-activeListManager1"/>
        <property name="growSkipInterval" value="0"/>
        <property name="checkStateOrder" value="false"/>
        <property name="buildWordLattice" value="false"/>
        <property name="acousticLookaheadFrames" value="1.7"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth2}"/>
    </component>

    <component name="audio-lm-ep-activeListManager1" 
             type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
	<propertylist name="activeListFactories">
	    <item>standardActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	</propertylist>
    </component>
    


    <component name="audio-lm-ep-pruner1"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer1"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend1"/>
        <property name="isCpuRelative" value="true"/>
        <property name="numThreads" value="0"/>
        <property name="minScoreablesPerThread" value="10"/>
        <property name="scoreablesKeepFeature" value="true"/>
    </component>

   <component name="audio-lm-ep-lexTreeLinguist1" 
                type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="logMath" value="logMath"/>
        <property name="acousticModel" value="acousticModel"/>
        <property name="languageModel" value="trigramModel"/>
        <property name="dictionary" value="dictionary"/>
        <property name="addFillerWords" value="false"/>
        <property name="fillerInsertionProbability" value="1E-10"/>
        <property name="generateUnitStates" value="false"/>
        <property name="wantUnigramSmear" value="true"/>
        <property name="unigramSmearWeight" value="1"/>
        <property name="wordInsertionProbability" 
                value="${lmwordInsertionProbability}"/>
        <property name="silenceInsertionProbability" 
                value="${lmsilenceInsertionProbability}"/>
        <property name="languageWeight" value="${lmlanguageWeight}"/>
        <property name="unitManager" value="unitManager"/>
    </component>    
    


    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #2                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer2" type="edu.cmu.sphinx.recognizer.Recognizer">
	    <property name="decoder" value="audio-lm-ep-decoder2"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #2                       -->
    <!-- ******************************************************** -->



    <component name="audio-lm-ep-decoder2" type="edu.cmu.sphinx.decoder.Decoder">
      <property name="searchManager" value="audio-lm-ep-searchManager2"/>
      <property name="featureBlockSize" value="50"/>
    </component>


    <component name="audio-lm-ep-searchManager2" 
              type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="audio-lm-ep-lexTreeLinguist2"/>
        <property name="pruner" value="audio-lm-ep-pruner2"/>
        <property name="scorer" value="audio-lm-ep-scorer2"/>
        <property name="activeListManager" value="audio-lm-ep-activeListManager2"/>
        <property name="growSkipInterval" value="0"/>
        <property name="checkStateOrder" value="false"/>
        <property name="buildWordLattice" value="false"/>
        <property name="acousticLookaheadFrames" value="1.7"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth2}"/>
    </component>

    <component name="audio-lm-ep-activeListManager2" 
             type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
	<propertylist name="activeListFactories">
	    <item>standardActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	</propertylist>
    </component>
    
    <component name="audio-lm-ep-pruner2"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer2"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend2"/>
        <property name="isCpuRelative" value="true"/>
        <property name="numThreads" value="0"/>
        <property name="minScoreablesPerThread" value="10"/>
        <property name="scoreablesKeepFeature" value="true"/>
    </component>

      <component name="audio-lm-ep-lexTreeLinguist2" 
                type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="logMath" value="logMath"/>
        <property name="acousticModel" value="acousticModel"/>
        <property name="languageModel" value="trigramModel"/>
        <property name="dictionary" value="dictionary"/>
        <property name="addFillerWords" value="false"/>
        <property name="fillerInsertionProbability" value="1E-10"/>
        <property name="generateUnitStates" value="false"/>
        <property name="wantUnigramSmear" value="true"/>
        <property name="unigramSmearWeight" value="1"/>
        <property name="wordInsertionProbability" 
                value="${lmwordInsertionProbability}"/>
        <property name="silenceInsertionProbability" 
                value="${lmsilenceInsertionProbability}"/>
        <property name="languageWeight" value="${lmlanguageWeight}"/>
        <property name="unitManager" value="unitManager"/>
    </component>    
     
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #3                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer3" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder3"/>
    </component>
    

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #3                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder3" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-ep-searchManager3"/>
    </component>

    <component name="audio-lm-ep-searchManager3"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-ep-pruner3"/>
        <property name="scorer" value="audio-lm-ep-scorer3"/>
        <property name="activeListFactory" value="audio-lm-ep-activeListFactory3"/>
    </component>

    <component name="audio-lm-ep-activeListFactory3"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-ep-pruner3"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer3"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend3"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #4                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer4" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder4"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #4                       -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder4" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-ep-searchManager4"/>
    </component>

    <component name="audio-lm-ep-searchManager4"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-ep-pruner4"/>
        <property name="scorer" value="audio-lm-ep-scorer4"/>
        <property name="activeListFactory" value="audio-lm-ep-activeListFactory4"/>
    </component>

    <component name="audio-lm-ep-activeListFactory4"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-ep-pruner4"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer4"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend4"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>

    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #5                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer5" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder5"/>
    </component>


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #5                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder5" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-ep-searchManager5"/>
    </component>

    <component name="audio-lm-ep-searchManager5"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-ep-pruner5"/>
        <property name="scorer" value="audio-lm-ep-scorer5"/>
        <property name="activeListFactory" value="audio-lm-ep-activeListFactory5"/>
    </component>

    <component name="audio-lm-ep-activeListFactory5"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-ep-pruner5"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer5"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend5"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #6                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer6" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder6"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #6                       -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder6" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-ep-searchManager6"/>
    </component>

    <component name="audio-lm-ep-searchManager6"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-ep-pruner6"/>
        <property name="scorer" value="audio-lm-ep-scorer6"/>
        <property name="activeListFactory" value="audio-lm-ep-activeListFactory6"/>
    </component>

    <component name="audio-lm-ep-activeListFactory6"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-ep-pruner6"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer6"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend6"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #7                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer7" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder7"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #7                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder7" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-ep-searchManager7"/>
    </component>

    <component name="audio-lm-ep-searchManager7"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-ep-pruner7"/>
        <property name="scorer" value="audio-lm-ep-scorer7"/>
        <property name="activeListFactory" value="audio-lm-ep-activeListFactory7"/>
    </component>

    <component name="audio-lm-ep-activeListFactory7"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-ep-pruner7"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer7"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend7"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #8                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer8" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder8"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #8                       -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder8" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-ep-searchManager8"/>
    </component>

    <component name="audio-lm-ep-searchManager8"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-ep-pruner8"/>
        <property name="scorer" value="audio-lm-ep-scorer8"/>
        <property name="activeListFactory" value="audio-lm-ep-activeListFactory8"/>
    </component>

    <component name="audio-lm-ep-activeListFactory8"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-ep-pruner8"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer8"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend8"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #9                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer9" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder9"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #9                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder9" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-ep-searchManager9"/>
    </component>

    <component name="audio-lm-ep-searchManager9"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-ep-pruner9"/>
        <property name="scorer" value="audio-lm-ep-scorer9"/>
        <property name="activeListFactory" value="audio-lm-ep-activeListFactory9"/>
    </component>

    <component name="audio-lm-ep-activeListFactory9"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-ep-pruner9"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer9"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend9"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #10                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-recognizer10" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-ep-decoder10"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #10                       -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-decoder10" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-ep-searchManager10"/>
    </component>

    <component name="audio-lm-ep-searchManager10"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-ep-pruner10"/>
        <property name="scorer" value="audio-lm-ep-scorer10"/>
        <property name="activeListFactory" value="audio-lm-ep-activeListFactory10"/>
    </component>

    <component name="audio-lm-ep-activeListFactory10"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-ep-pruner10"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-ep-scorer10"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-ep-frontend10"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>

   <!-- ******************************************************** -->
    <!-- The live frontend configuration    1                     -->
    <!-- ******************************************************** -->
    
    
        <component name="audio-lm-ep-frontend1" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource1</item-->
            <item>audio-lm-ep-dataBlocker1 </item>
            <item>audio-lm-ep-speechClassifier1 </item>
            <item>audio-lm-ep-speechMarker1 </item>
	    <item>audio-lm-ep-nonSpeechDataFilter1 </item>
	    <item>audio-lm-ep-speechDataMonitor1 </item>
            <item>audio-lm-ep-preemphasizer1</item>
            <item>audio-lm-ep-dither1</item>
            <item>audio-lm-ep-windower1</item>
            <item>audio-lm-ep-fft1</item>
            <item>audio-lm-ep-melFilterBank1</item>
            <item>audio-lm-ep-dct1</item>
            <item>audio-lm-ep-cmn1</item>
            <item>audio-lm-ep-featureExtraction1</item>
            <item>audio-lm-ep-LDA1</item>
            <!--item>audio-lm-ep-identityStage1</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker1" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    
    <component name="audio-lm-ep-nonSpeechDataFilter1" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    

    <component name="audio-lm-ep-speechClassifier1"
               type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier">
	       <property name="threshold" value="${speechClassifierThreshold}"/>
	       <!--property name="logLevel" value="FINEST"/-->
</component>

    <component name="audio-lm-ep-speechDataMonitor1"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataMonitor"/>


    <component name="audio-lm-ep-speechMarker1"
               type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" >
	    <!--property name="speechTrailer" value="50"/-->
            <!--property name="endSilence" value="20"/-->
	    <!--property name="startSpeech" value="20"/-->
	    <!--property name="speechLeader" value="50"/-->
    </component>   
          
    <component name="audio-lm-ep-identityStage1" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource1" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder1"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer1"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither1"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower1"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft1"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank1"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct1"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn1"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction1"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>
    
    <component name="audio-lm-ep-LDA1" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

     <!-- ******************************************************** -->
    <!-- The live frontend configuration 2                         -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend2" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource2</item-->
            <item>audio-lm-ep-dataBlocker2 </item>
            <item>audio-lm-ep-speechClassifier2 </item>
            <item>audio-lm-ep-speechMarker2 </item>
            <item>audio-lm-ep-nonSpeechDataFilter2 </item>
            <item>audio-lm-ep-preemphasizer2</item>
            <item>audio-lm-ep-dither2</item>
            <item>audio-lm-ep-windower2</item>
            <item>audio-lm-ep-fft2</item>
            <item>audio-lm-ep-melFilterBank2</item>
            <item>audio-lm-ep-dct2</item>
            <item>audio-lm-ep-cmn2</item>
            <item>audio-lm-ep-featureExtraction2</item>
            <!--item>audio-lm-ep-identityStage2</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker2" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier2" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter2" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker2" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage2" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource2" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder2"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer2"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither2"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower2"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft2"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank2"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct2"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn2"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction2"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

             <!-- ******************************************************** -->
    <!-- The live frontend configuration                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend3" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource3</item-->
            <item>audio-lm-ep-dataBlocker3 </item>
            <item>audio-lm-ep-speechClassifier3 </item>
            <item>audio-lm-ep-speechMarker3 </item>
            <item>audio-lm-ep-nonSpeechDataFilter3 </item>
            <item>audio-lm-ep-preemphasizer3</item>
            <item>audio-lm-ep-dither3</item>
            <item>audio-lm-ep-windower3</item>
            <item>audio-lm-ep-fft3</item>
            <item>audio-lm-ep-melFilterBank3</item>
            <item>audio-lm-ep-dct3</item>
            <item>audio-lm-ep-cmn3</item>
            <item>audio-lm-ep-featureExtraction3</item>
            <!--item>audio-lm-ep-identityStage3</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker3" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier3" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter3" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker3" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage3" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource3" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder3"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer3"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither3"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower3"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft3"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank3"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct3"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn3"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction3"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

             <!-- ******************************************************** -->
    <!-- The live frontend configuration                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend4" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource4</item-->
            <item>audio-lm-ep-dataBlocker4 </item>
            <item>audio-lm-ep-speechClassifier4 </item>
            <item>audio-lm-ep-speechMarker4 </item>
            <item>audio-lm-ep-nonSpeechDataFilter4 </item>
            <item>audio-lm-ep-preemphasizer4</item>
            <item>audio-lm-ep-dither4</item>
            <item>audio-lm-ep-windower4</item>
            <item>audio-lm-ep-fft4</item>
            <item>audio-lm-ep-melFilterBank4</item>
            <item>audio-lm-ep-dct4</item>
            <item>audio-lm-ep-cmn4</item>
            <item>audio-lm-ep-featureExtraction4</item>
            <!--item>audio-lm-ep-identityStage4</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker4" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier4" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter4" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker4" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage4" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource4" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder4"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer4"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither4"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower4"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft4"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank4"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct4"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn4"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction4"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

             <!-- ******************************************************** -->
    <!-- The live frontend configuration                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend5" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource5</item-->
            <item>audio-lm-ep-dataBlocker5 </item>
            <item>audio-lm-ep-speechClassifier5 </item>
            <item>audio-lm-ep-speechMarker5 </item>
            <item>audio-lm-ep-nonSpeechDataFilter5 </item>
            <item>audio-lm-ep-preemphasizer5</item>
            <item>audio-lm-ep-dither5</item>
            <item>audio-lm-ep-windower5</item>
            <item>audio-lm-ep-fft5</item>
            <item>audio-lm-ep-melFilterBank5</item>
            <item>audio-lm-ep-dct5</item>
            <item>audio-lm-ep-cmn5</item>
            <item>audio-lm-ep-featureExtraction5</item>
            <!--item>audio-lm-ep-identityStage5</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker5" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier5" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter5" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker5" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage5" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource5" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder5"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer5"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither5"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower5"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft5"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank5"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct5"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn5"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction5"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

             <!-- ******************************************************** -->
    <!-- The live frontend configuration                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend6" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource6</item-->
            <item>audio-lm-ep-dataBlocker6 </item>
            <item>audio-lm-ep-speechClassifier6 </item>
            <item>audio-lm-ep-speechMarker6 </item>
            <item>audio-lm-ep-nonSpeechDataFilter6 </item>
            <item>audio-lm-ep-preemphasizer6</item>
            <item>audio-lm-ep-dither6</item>
            <item>audio-lm-ep-windower6</item>
            <item>audio-lm-ep-fft6</item>
            <item>audio-lm-ep-melFilterBank6</item>
            <item>audio-lm-ep-dct6</item>
            <item>audio-lm-ep-cmn6</item>
            <item>audio-lm-ep-featureExtraction6</item>
            <!--item>audio-lm-ep-identityStage6</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker6" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier6" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter6" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker6" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage6" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource6" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder6"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer6"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither6"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower6"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft6"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank6"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct6"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn6"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction6"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

             <!-- ******************************************************** -->
    <!-- The live frontend configuration                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend7" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource7</item-->
            <item>audio-lm-ep-dataBlocker7 </item>
            <item>audio-lm-ep-speechClassifier7 </item>
            <item>audio-lm-ep-speechMarker7 </item>
            <item>audio-lm-ep-nonSpeechDataFilter7 </item>
            <item>audio-lm-ep-preemphasizer7</item>
            <item>audio-lm-ep-dither7</item>
            <item>audio-lm-ep-windower7</item>
            <item>audio-lm-ep-fft7</item>
            <item>audio-lm-ep-melFilterBank7</item>
            <item>audio-lm-ep-dct7</item>
            <item>audio-lm-ep-cmn7</item>
            <item>audio-lm-ep-featureExtraction7</item>
            <!--item>audio-lm-ep-identityStage7</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker7" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier7" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter7" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker7" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage7" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource7" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder7"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer7"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither7"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower7"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft7"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank7"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct7"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn7"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction7"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

             <!-- ******************************************************** -->
    <!-- The live frontend configuration                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend8" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource8</item-->
            <item>audio-lm-ep-dataBlocker8 </item>
            <item>audio-lm-ep-speechClassifier8 </item>
            <item>audio-lm-ep-speechMarker8 </item>
            <item>audio-lm-ep-nonSpeechDataFilter8 </item>
            <item>audio-lm-ep-preemphasizer8</item>
            <item>audio-lm-ep-dither8</item>
            <item>audio-lm-ep-windower8</item>
            <item>audio-lm-ep-fft8</item>
            <item>audio-lm-ep-melFilterBank8</item>
            <item>audio-lm-ep-dct8</item>
            <item>audio-lm-ep-cmn8</item>
            <item>audio-lm-ep-featureExtraction8</item>
            <!--item>audio-lm-ep-identityStage8</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker8" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier8" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter8" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker8" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage8" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource8" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder8"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer8"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither8"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower8"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft8"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank8"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct8"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn8"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction8"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <!-- ******************************************************** -->
    <!-- The live frontend configuration                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend9" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource9</item-->
            <item>audio-lm-ep-dataBlocker9 </item>
            <item>audio-lm-ep-speechClassifier9 </item>
            <item>audio-lm-ep-speechMarker9 </item>
            <item>audio-lm-ep-nonSpeechDataFilter9 </item>
            <item>audio-lm-ep-preemphasizer9</item>
            <item>audio-lm-ep-dither9</item>
            <item>audio-lm-ep-windower9</item>
            <item>audio-lm-ep-fft9</item>
            <item>audio-lm-ep-melFilterBank9</item>
            <item>audio-lm-ep-dct9</item>
            <item>audio-lm-ep-cmn9</item>
            <item>audio-lm-ep-featureExtraction9</item>
            <!--item>audio-lm-ep-identityStage9</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker9" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier9" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter9" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker9" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage9" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource9" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder9"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer9"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither9"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower9"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft9"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank9"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct9"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn9"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction9"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <!-- ******************************************************** -->
    <!-- The live frontend configuration                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-ep-frontend10" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-ep-streamDataSource10</item-->
            <item>audio-lm-ep-dataBlocker10 </item>
            <item>audio-lm-ep-speechClassifier10 </item>
            <item>audio-lm-ep-speechMarker10 </item>
            <item>audio-lm-ep-nonSpeechDataFilter10 </item>
            <item>audio-lm-ep-preemphasizer10</item>
            <item>audio-lm-ep-dither10</item>
            <item>audio-lm-ep-windower10</item>
            <item>audio-lm-ep-fft10</item>
            <item>audio-lm-ep-melFilterBank10</item>
            <item>audio-lm-ep-dct10</item>
            <item>audio-lm-ep-cmn10</item>
            <item>audio-lm-ep-featureExtraction10</item>
            <!--item>audio-lm-ep-identityStage10</item-->
        </propertylist>
    </component>

    <!-- ******************************************************** -->
    <!-- The frontend pipelines                                   -->
    <!-- ******************************************************** -->


    <component name="audio-lm-ep-dataBlocker10" type="edu.cmu.sphinx.frontend.DataBlocker"/>
    
    <component name="audio-lm-ep-speechClassifier10" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier"/>
    
    <component name="audio-lm-ep-nonSpeechDataFilter10" 
               type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    
    <component name="audio-lm-ep-speechMarker10" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker" />
        
  
          
    <component name="audio-lm-ep-identityStage10" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-ep-streamDataSource10" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-ep-speechDataRecorder10"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-ep-preemphasizer10"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-ep-dither10"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-ep-windower10"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-ep-fft10"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-ep-melFilterBank10"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-ep-dct10"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-ep-cmn10"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               
    <component name="audio-lm-ep-featureExtraction10"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>


    <!-- ******************************************************** -->
    <!-- word recognizer configuration  #1                        -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer1" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder1"/>
        <!--propertylist name="monitors"-->
            <!--item>accuracyTracker </item-->
            <!--item>speedTracker </item-->
            <!--item>memoryTracker </item-->
        <!--/propertylist-->
    </component>

    <!-- ***************************************************************   -->
	<!-- *** Audio frontend, without endpointing, language model     ***   -->
    <!-- ***************************************************************   -->


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #1                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder1" type="edu.cmu.sphinx.decoder.Decoder">
      <property name="searchManager" value="audio-lm-searchManager1"/>
      <property name="featureBlockSize" value="50"/>
    </component>


    <component name="audio-lm-searchManager1" 
              type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="audio-lm-lexTreeLinguist1"/>
        <property name="pruner" value="audio-lm-pruner1"/>
        <property name="scorer" value="audio-lm-scorer1"/>
        <property name="activeListManager" value="audio-lm-activeListManager1"/>
        <property name="growSkipInterval" value="0"/>
        <property name="checkStateOrder" value="false"/>
        <property name="buildWordLattice" value="false"/>
        <property name="acousticLookaheadFrames" value="1.7"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth2}"/>
    </component>

    <component name="audio-lm-activeListManager1" 
             type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
	<propertylist name="activeListFactories">
	    <item>standardActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	</propertylist>
    </component>
    


    <component name="audio-lm-pruner1"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer1"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend1"/>
        <property name="isCpuRelative" value="true"/>
        <property name="numThreads" value="0"/>
        <property name="minScoreablesPerThread" value="10"/>
        <property name="scoreablesKeepFeature" value="true"/>
    </component>

   <component name="audio-lm-lexTreeLinguist1" 
                type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="logMath" value="logMath"/>
        <property name="acousticModel" value="acousticModel"/>
        <property name="languageModel" value="trigramModel"/>
        <property name="dictionary" value="dictionary"/>
        <property name="addFillerWords" value="false"/>
        <property name="fillerInsertionProbability" value="1E-10"/>
        <property name="generateUnitStates" value="false"/>
        <property name="wantUnigramSmear" value="true"/>
        <property name="unigramSmearWeight" value="1"/>
        <property name="wordInsertionProbability" 
                value="${lmwordInsertionProbability}"/>
        <property name="silenceInsertionProbability" 
                value="${lmsilenceInsertionProbability}"/>
        <property name="languageWeight" value="${lmlanguageWeight}"/>
        <property name="unitManager" value="unitManager"/>
    </component>    
    


    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #2                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer2" type="edu.cmu.sphinx.recognizer.Recognizer">
	    <property name="decoder" value="audio-lm-decoder2"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #2                       -->
    <!-- ******************************************************** -->



    <component name="audio-lm-decoder2" type="edu.cmu.sphinx.decoder.Decoder">
      <property name="searchManager" value="audio-lm-searchManager2"/>
      <property name="featureBlockSize" value="50"/>
    </component>


    <component name="audio-lm-searchManager2" 
              type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="audio-lm-lexTreeLinguist2"/>
        <property name="pruner" value="audio-lm-pruner2"/>
        <property name="scorer" value="audio-lm-scorer2"/>
        <property name="activeListManager" value="audio-lm-activeListManager2"/>
        <property name="growSkipInterval" value="0"/>
        <property name="checkStateOrder" value="false"/>
        <property name="buildWordLattice" value="false"/>
        <property name="acousticLookaheadFrames" value="1.7"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth2}"/>
    </component>

    <component name="audio-lm-activeListManager2" 
             type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
	<propertylist name="activeListFactories">
	    <item>standardActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>wordActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	    <item>standardActiveListFactory</item>
	</propertylist>
    </component>
    
    <component name="audio-lm-pruner2"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer2"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend2"/>
        <property name="isCpuRelative" value="true"/>
        <property name="numThreads" value="0"/>
        <property name="minScoreablesPerThread" value="10"/>
        <property name="scoreablesKeepFeature" value="true"/>
    </component>

      <component name="audio-lm-lexTreeLinguist2" 
                type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="logMath" value="logMath"/>
        <property name="acousticModel" value="acousticModel"/>
        <property name="languageModel" value="trigramModel"/>
        <property name="dictionary" value="dictionary"/>
        <property name="addFillerWords" value="false"/>
        <property name="fillerInsertionProbability" value="1E-10"/>
        <property name="generateUnitStates" value="false"/>
        <property name="wantUnigramSmear" value="true"/>
        <property name="unigramSmearWeight" value="1"/>
        <property name="wordInsertionProbability" 
                value="${lmwordInsertionProbability}"/>
        <property name="silenceInsertionProbability" 
                value="${lmsilenceInsertionProbability}"/>
        <property name="languageWeight" value="${lmlanguageWeight}"/>
        <property name="unitManager" value="unitManager"/>
    </component>    
     
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #3                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer3" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder3"/>
    </component>
    

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #3                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder3" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-searchManager3"/>
    </component>

    <component name="audio-lm-searchManager3"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-pruner3"/>
        <property name="scorer" value="audio-lm-scorer3"/>
        <property name="activeListFactory" value="audio-lm-activeListFactory3"/>
    </component>

    <component name="audio-lm-activeListFactory3"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-pruner3"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer3"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend3"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #4                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer4" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder4"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #4                       -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder4" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-searchManager4"/>
    </component>

    <component name="audio-lm-searchManager4"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-pruner4"/>
        <property name="scorer" value="audio-lm-scorer4"/>
        <property name="activeListFactory" value="audio-lm-activeListFactory4"/>
    </component>

    <component name="audio-lm-activeListFactory4"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-pruner4"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer4"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend4"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>

    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #5                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer5" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder5"/>
    </component>


    <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #5                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder5" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-searchManager5"/>
    </component>

    <component name="audio-lm-searchManager5"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-pruner5"/>
        <property name="scorer" value="audio-lm-scorer5"/>
        <property name="activeListFactory" value="audio-lm-activeListFactory5"/>
    </component>

    <component name="audio-lm-activeListFactory5"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-pruner5"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer5"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend5"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #6                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer6" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder6"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #6                       -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder6" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-searchManager6"/>
    </component>

    <component name="audio-lm-searchManager6"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-pruner6"/>
        <property name="scorer" value="audio-lm-scorer6"/>
        <property name="activeListFactory" value="audio-lm-activeListFactory6"/>
    </component>

    <component name="audio-lm-activeListFactory6"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-pruner6"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer6"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend6"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #7                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer7" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder7"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #7                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder7" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-searchManager7"/>
    </component>

    <component name="audio-lm-searchManager7"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-pruner7"/>
        <property name="scorer" value="audio-lm-scorer7"/>
        <property name="activeListFactory" value="audio-lm-activeListFactory7"/>
    </component>

    <component name="audio-lm-activeListFactory7"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-pruner7"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer7"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend7"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #8                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer8" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder8"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #8                       -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder8" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-searchManager8"/>
    </component>

    <component name="audio-lm-searchManager8"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-pruner8"/>
        <property name="scorer" value="audio-lm-scorer8"/>
        <property name="activeListFactory" value="audio-lm-activeListFactory8"/>
    </component>

    <component name="audio-lm-activeListFactory8"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-pruner8"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer8"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend8"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>
    
    
    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #9                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer9" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder9"/>
    </component>
    
    
        <!-- ******************************************************** -->
    <!-- The Decoder   configuration  #9                          -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder9" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-searchManager9"/>
    </component>

    <component name="audio-lm-searchManager9"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-pruner9"/>
        <property name="scorer" value="audio-lm-scorer9"/>
        <property name="activeListFactory" value="audio-lm-activeListFactory9"/>
    </component>

    <component name="audio-lm-activeListFactory9"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-pruner9"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer9"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend9"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



    <!-- ******************************************************** -->
    <!-- word recognizer configuration    #10                      -->
    <!-- ******************************************************** -->

    <component name="audio-lm-recognizer10" type="edu.cmu.sphinx.recognizer.Recognizer">
        <property name="decoder" value="audio-lm-decoder10"/>
    </component>

    <!-- ******************************************************** -->
    <!-- The Decoder   configuration     #10                       -->
    <!-- ******************************************************** -->

    <component name="audio-lm-decoder10" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="audio-lm-searchManager10"/>
    </component>

    <component name="audio-lm-searchManager10"
               type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
        <property name="logMath" value="logMath"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="pruner" value="audio-lm-pruner10"/>
        <property name="scorer" value="audio-lm-scorer10"/>
        <property name="activeListFactory" value="audio-lm-activeListFactory10"/>
    </component>

    <component name="audio-lm-activeListFactory10"
               type="edu.cmu.sphinx.decoder.search.SortingActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>

    <component name="audio-lm-pruner10"
               type="edu.cmu.sphinx.decoder.pruner.SimplePruner"/>

    <component name="audio-lm-scorer10"
               type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="audio-lm-frontend10"/>
        <!--SALproperty name="isCpuRelative" value="true"/-->
        <!--SALproperty name="numThreads" value="0"/-->
        <!--SALproperty name="minScoreablesPerThread" value="10"/-->
        <!--SALproperty name="scoreablesKeepFeature" value="true"/-->
    </component>



 
               
    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend1" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource1</item-->
            <!--item>audio-lm-speechDataRecorder1</item-->
            <item>audio-lm-preemphasizer1</item>
            <item>audio-lm-dither1</item>
            <item>audio-lm-windower1</item>
            <item>audio-lm-fft1</item>
            <item>audio-lm-melFilterBank1</item>
            <item>audio-lm-dct1</item>
            <item>audio-lm-cmn1</item>
            <item>audio-lm-featureExtraction1</item>
            <item>audio-lm-LDA1</item>
            <item>audio-lm-identityStage1</item>
        </propertylist>
    </component>
    

    <component name="audio-lm-identityStage1" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-streamDataSource1" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder1"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer1"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither1"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower1"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft1"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank1"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct1"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn1"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction1"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>
               
    <component name="audio-lm-LDA1" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend2" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource2</item-->
            <item>audio-lm-preemphasizer2</item>
            <item>audio-lm-dither2</item>
            <item>audio-lm-windower2</item>
            <item>audio-lm-fft2</item>
            <item>audio-lm-melFilterBank2</item>
            <item>audio-lm-dct2</item>
            <item>audio-lm-cmn2</item>
            <item>audio-lm-featureExtraction2</item>
            <item>audio-lm-LDA2</item>
            <!--item>audio-lm-identityStage2</item-->
        </propertylist>
    </component>
    

    <component name="audio-lm-identityStage2" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

    <component name="audio-lm-streamDataSource2" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder2"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer2"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither2"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower2"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft2"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank2"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct2"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn2"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction2"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-lm-LDA2" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

   <!-- ******************************************************** -->
    <!-- The frontend configuration #3                              -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend3" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource3</item-->
            <item>audio-lm-preemphasizer3</item>
            <item>audio-lm-dither3</item>
            <item>audio-lm-windower3</item>
            <item>audio-lm-fft3</item>
            <item>audio-lm-melFilterBank3</item>
            <item>audio-lm-dct3</item>
            <item>audio-lm-cmn3</item>
            <item>audio-lm-featureExtraction3</item>
            <item>audio-lm-LDA3</item>
            <!--item>audio-lm-identityStage3</item-->
        </propertylist>
    </component>
    

    <component name="audio-lm-identityStage3" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>

    <component name="audio-lm-streamDataSource3" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder3"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer3"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither3"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower3"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft3"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank3"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct3"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn3"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction3"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>
    
    <component name="audio-lm-LDA3" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend4" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource4</item-->
            <item>audio-lm-preemphasizer4</item>
            <item>audio-lm-dither4</item>
            <item>audio-lm-windower4</item>
            <item>audio-lm-fft4</item>
            <item>audio-lm-melFilterBank4</item>
            <item>audio-lm-dct4</item>
            <item>audio-lm-cmn4</item>
            <item>audio-lm-featureExtraction4</item>
            <item>audio-lm-LDA4</item>
                        <!--item>audio-lm-identityStage4</item-->
        </propertylist>
    </component>


    <component name="audio-lm-identityStage4" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>
    

    <component name="audio-lm-streamDataSource4" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder4"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer4"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither4"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower4"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft4"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank4"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct4"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn4"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction4"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>


    <component name="audio-lm-LDA4" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>
	
   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend5" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource5</item-->
            <item>audio-lm-preemphasizer5</item>
            <item>audio-lm-dither5</item>
            <item>audio-lm-windower5</item>
            <item>audio-lm-fft5</item>
            <item>audio-lm-melFilterBank5</item>
            <item>audio-lm-dct5</item>
            <item>audio-lm-cmn5</item>
            <item>audio-lm-featureExtraction5</item>
                        <item>audio-lm-LDA5</item>
                        <!--item>audio-lm-identityStage5</item-->
        </propertylist>
    </component>


    <component name="audio-lm-identityStage5" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>
    

    <component name="audio-lm-streamDataSource5" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder5"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer5"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither5"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower5"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft5"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank5"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct5"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn5"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction5"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-lm-LDA5" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend6" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource6</item-->
            <item>audio-lm-preemphasizer6</item>
            <item>audio-lm-dither6</item>
            <item>audio-lm-windower6</item>
            <item>audio-lm-fft6</item>
            <item>audio-lm-melFilterBank6</item>
            <item>audio-lm-dct6</item>
            <item>audio-lm-cmn6</item>
            <item>audio-lm-featureExtraction6</item>
            <item>audio-lm-LDA6</item>
                        <!--item>audio-lm-identityStage6</item-->
        </propertylist>
    </component>
    


    <component name="audio-lm-identityStage6" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-streamDataSource6" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder6"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer6"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither6"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower6"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft6"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank6"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct6"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn6"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction6"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-lm-LDA6" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>
	
   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend7" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource7</item-->
            <item>audio-lm-preemphasizer7</item>
            <item>audio-lm-dither7</item>
            <item>audio-lm-windower7</item>
            <item>audio-lm-fft7</item>
            <item>audio-lm-melFilterBank7</item>
            <item>audio-lm-dct7</item>
            <item>audio-lm-cmn7</item>
            <item>audio-lm-featureExtraction7</item>
            <item>audio-lm-LDA7</item>
                        <!--item>audio-lm-identityStage7</item-->
        </propertylist>
    </component>
    


    <component name="audio-lm-identityStage7" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-streamDataSource7" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder7"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer7"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither7"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower7"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft7"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank7"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct7"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn7"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction7"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-lm-LDA7" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend8" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource8</item-->
            <item>audio-lm-preemphasizer8</item>
            <item>audio-lm-dither8</item>
            <item>audio-lm-windower8</item>
            <item>audio-lm-fft8</item>
            <item>audio-lm-melFilterBank8</item>
            <item>audio-lm-dct8</item>
            <item>audio-lm-cmn8</item>
            <item>audio-lm-featureExtraction8</item>
            <item>audio-lm-LDA8</item>
                        <!--item>audio-lm-identityStage8</item-->
        </propertylist>
    </component>
    


    <component name="audio-lm-identityStage8" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-streamDataSource8" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder8"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer8"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither8"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower8"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft8"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank8"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct8"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn8"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction8"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-lm-LDA8" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

   <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend9" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource9</item-->
            <item>audio-lm-preemphasizer9</item>
            <item>audio-lm-dither9</item>
            <item>audio-lm-windower9</item>
            <item>audio-lm-fft9</item>
            <item>audio-lm-melFilterBank9</item>
            <item>audio-lm-dct9</item>
            <item>audio-lm-cmn9</item>
            <item>audio-lm-featureExtraction9</item>
            <item>audio-lm-LDA9</item>            
            <!--item>audio-lm-identityStage9</item-->
        </propertylist>
    </component>
    


    <component name="audio-lm-identityStage9" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-streamDataSource9" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder9"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer9"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither9"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower9"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft9"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank9"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct9"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn9"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction9"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

    <component name="audio-lm-LDA9" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>

    <!-- ******************************************************** -->
    <!-- The frontend configuration                               -->
    <!-- ******************************************************** -->

    <component name="audio-lm-frontend10" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">       
            <!--item>audio-lm-streamDataSource10</item-->
            <item>audio-lm-preemphasizer10</item>
            <item>audio-lm-dither10</item>
            <item>audio-lm-windower10</item>
            <item>audio-lm-fft10</item>
            <item>audio-lm-melFilterBank10</item>
            <item>audio-lm-dct10</item>
            <item>audio-lm-cmn10</item>
            <item>audio-lm-featureExtraction10</item>
            <item>audio-lm-LDA10</item>
            <!--item>audio-lm-identityStage10</item-->
        </propertylist>
    </component>
    


    <component name="audio-lm-identityStage10" 
               type="com.spokentech.speechdown.common.sphinx.IdentityStage"/>


    <component name="audio-lm-streamDataSource10" 
               type="com.spokentech.speechdown.server.recog.AudioStreamDataSource"/>

    <component name="audio-lm-speechDataRecorder10"
               type="org.speechforge.cairo.rtp.server.sphinx.SpeechDataRecorder"/>


    <component name="audio-lm-preemphasizer10"
               type="edu.cmu.sphinx.frontend.filter.Preemphasizer"/>
               
               
    <component name="audio-lm-dither10"
               type="edu.cmu.sphinx.frontend.filter.Dither"/>

    <component name="audio-lm-windower10"
               type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower"/>

    <component name="audio-lm-fft10"
               type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform"/>

    <component name="audio-lm-melFilterBank10"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="minimumFrequency" value="200"/>
               <property name="maximumFrequency" value="3500"/>
               <property name="numberFilters" value="31"/>
    </component>

    <component name="audio-lm-dct10"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform"/>

    <component name="audio-lm-cmn10"
               type="edu.cmu.sphinx.frontend.feature.LiveCMN">
                 <property name="initialMean " value="12"/>
               <property name="cmnWindow" value="500"/>
               <property name="shiftWindow" value="800"/>
    </component>             
               

    <component name="audio-lm-featureExtraction10"
               type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor"/>

        <component name="audio-lm-LDA10" 
		   type="edu.cmu.sphinx.frontend.feature.LDA">	
		<property name="loader" value="loader"/>
	</component>        
            
            
 
                 

    <!-- ******************************************************* -->
    <!--  monitors                                               -->
    <!-- ******************************************************* -->


    <!-- ******************************************************* -->
    <!--  Miscellaneous components                               -->
    <!-- ******************************************************* -->

    <component name="logMath"
               type="edu.cmu.sphinx.util.LogMath">
        <property name="logBase" value="1.0001"/>
        <property name="useAddTable" value="true"/>
    </component>
    
    <component name="confidenceScorer"
               type="edu.cmu.sphinx.result.MAPConfidenceScorer">
        <property name="languageWeight" value="${languageWeight}"/>
    </component>

</config>
